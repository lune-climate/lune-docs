openapi: 3.0.1
info:
  title: Lune Logistics CSV Reference
  version: '1.0'
  contact:
    name: Lune Support
    email: support@lune.co
  termsOfService: https://lune.co/terms
  description: Full documentation can be found on https://docs.lune.co

components:
  schemas:
    MultiLegRowResults:
      type: object
      required:
        - estimate_id
        - dashboard_url
        - total_mass_tco2
        - total_distance_km
        - total_adjusted_distance_km
        - error
        - leg1_estimated_distance_km
        - leg1_total_tco2
      properties:
        estimate_id:
          type: string
          description: |
            The estimate's unique id.

            To understand how we have calculated emissions, visit the following page:

            `https://dashboard.lune.co/calculate-emissions/multi-leg-shipping/<ESTIMATE_ID>/results`
          default: ''
        dashboard_url:
          type: string
          description: |
            The URL pointing to the specific emission calculation page in the Lune dashboard.

            Here you can:
            * review your estimate
            * read how Lune has calculated your emissions
            * offset your emissions
          default: ''
        client_account_analytics_url:
          type: string
          description: |
            The URL pointing to the specific client account's analytics page.

            This column is populated when `client_account_handle` is provided.

            Here your customers can:
            * view their shipment analytics
            * view individual shipment estimates
            * read how Lune has calculated their emissions
          default: ''
        total_mass_tco2:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Overall emission estimate in tCO2e.
          default: ''
        total_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Overall shipment distance in km.
          default: ''
        total_adjusted_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Overall shipment distance in km inclusive of distance adjustment factors.
          default: ''
        error:
          type: string
          default: ''
          description: |
            Describes the error that occured when processing the row.

            When set, the row has failed to process and does not return results.

            Please correct the provided data.
        leg1_estimated_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance in km.

            Equivalent to `leg*_distance_km` when `leg*_distance_km` is provided.
          default: ''
        leg1_estimated_adjusted_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance inclusive of distance adjustment factors in km.
          default: ''
        leg1_total_tco2:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Leg emission estimate in tCO2e.
          default: ''
        leg2_estimated_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance in km.

            Equivalent to `leg*_distance_km` when `leg*_distance_km` is provided.
          default: ''
        leg2_estimated_adjusted_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance inclusive of distance adjustment factors in km.
          default: ''
        leg2_total_tco2:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Leg emission estimate in tCO2e.
          default: ''
        leg3_estimated_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance in km.

            Equivalent to `leg*_distance_km` when `leg*_distance_km` is provided.
          default: ''
        leg3_estimated_adjusted_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance inclusive of distance adjustment factors in km.
          default: ''
        leg3_total_tco2:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Leg emission estimate in tCO2e.
          default: ''
        leg4_estimated_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance in km.

            Equivalent to `leg*_distance_km` when `leg*_distance_km` is provided.
          default: ''
        leg4_estimated_adjusted_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance inclusive of distance adjustment factors in km.
          default: ''
        leg4_total_tco2:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Leg emission estimate in tCO2e.
          default: ''
        leg5_estimated_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance in km.

            Equivalent to `leg*_distance_km` when `leg*_distance_km` is provided.
          default: ''
        leg5_estimated_adjusted_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance inclusive of distance adjustment factors in km.
          default: ''
        leg5_total_tco2:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Leg emission estimate in tCO2e.
          default: ''
        leg6_estimated_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance in km.

            Equivalent to `leg*_distance_km` when `leg*_distance_km` is provided.
          default: ''
        leg6_estimated_adjusted_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance inclusive of distance adjustment factors in km.
          default: ''
        leg6_total_tco2:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Leg emission estimate in tCO2e.
          default: ''
        leg7_estimated_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance in km.

            Equivalent to `leg*_distance_km` when `leg*_distance_km` is provided.
          default: ''
        leg7_estimated_adjusted_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance inclusive of distance adjustment factors in km.
          default: ''
        leg7_total_tco2:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Leg emission estimate in tCO2e.
          default: ''
        leg8_estimated_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance in km.

            Equivalent to `leg*_distance_km` when `leg*_distance_km` is provided.
          default: ''
        leg8_estimated_adjusted_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance inclusive of distance adjustment factors in km.
          default: ''
        leg8_total_tco2:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Leg emission estimate in tCO2e.
          default: ''
        leg9_estimated_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance in km.

            Equivalent to `leg*_distance_km` when `leg*_distance_km` is provided.
          default: ''
        leg9_estimated_adjusted_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance inclusive of distance adjustment factors in km.
          default: ''
        leg9_total_tco2:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Leg emission estimate in tCO2e.
          default: ''
        leg10_estimated_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance in km.

            Equivalent to `leg*_distance_km` when `leg*_distance_km` is provided.
          default: ''
        leg10_estimated_adjusted_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg estimated distance inclusive of distance adjustment factors in km.
          default: ''
        leg10_total_tco2:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: Leg emission estimate in tCO2e.
    MultiLegRowIn:
      type: object
      required:
        - version
      properties:
        version:
          type: string
          pattern: '^[0-9]+$'
          description: |
            The row's schema version.

            Must be set to `1`.
        shipment_id:
          type: string
          description: |
            Client shipment identifier

            Acts as external id. The field represents the id in your system, which you may use to reconcile emission estimates.
          default: ''
        client_account_id:
          type: string
          description: |
            The client account unique identifier.

            When set, the emission estimate is stored against the client account.

            For details in regards to Client Accounts visit https://docs.lune.co/api-reference/client-accounts/client-account.
          default: ''
        client_account_handle:
          type: string
          pattern: '^$|^[a-z0-9-_]+$'
          description: |
            The client account handle is a unique user defined handle that identifies your customer.

            A client account is created for every new handle and the emission estimate is stored against the client account.

            If a client account is already associated with the handle, the emission estimate is stored against the existing client account.

            For details in regards to Client Accounts visit https://docs.lune.co/api-reference/client-accounts/client-account.

            Note: `client_account_id` takes precedence of `client_account_handle`.
          default: ''
        client_account_currency:
          type: string
          description: |
            The client account's currency.

            This property must be set when `client_account_handle` is set.

            You cannot overwrite a client account's currency.
          default: ''
        client_account_name:
          type: string
          description: |
            The client account's name.

            If no value is provided, this will equal the client account handle.

            If `client_account_name` is different from the account's name in Lune's system, the account's name will be changed.
          default: ''
        client_account_beneficiary:
          type: string
          description: |
            The client account's beneficiary.

            This is the name that appears on future retirements that are made in this account.
            If none is present, the organisation beneficiary will be used instead.

            If `client_account_beneficiary` is different from the account's beneficiary in Lune's system, the account's beneficiary will be changed.
          default: ''
        is_shipment:
          type: string
          description: |
            Is this an estimate for an actual shipment?

            If left blank, `false` is used.
          enum:
            - ''
            - 'TRUE'
            - 'true'
            - 'FALSE'
            - 'false'
        shipped_at:
          $ref: '#/components/schemas/OptionalShippedAt'
        mass_kg:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          default: ''
          description: |
            Shipment weight in kg.

            One of `mass_kg` and `containers` is mandatory. You may provide both for more accurate estimates.
        containers:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          default: ''
          description: |
            Shipment in containers.

            One of `mass_kg` and `containers` is mandatory. You may provide both for more accurate estimates.
        pickup_country:
          type: string
          description: |
            Pick up 3-letter ISO 3166 country code.

            `pickup_country`, `pickup_city`, `pickup_postcode`, `pickup_street` are fields that form an `address`.

            One of `address`, `pickup_coordinates`, `pickup_locode` is required.

            As part of an `address`, to ensure accuracy, `pickup_country` is required and at least one of `pickup_street`, `pickup_postcode`, `pickup_city`.

            Examples: `GBR`, `ISR`.
          default: ''
        pickup_city:
          type: string
          description: |
            Pick up city.

            `pickup_country`, `pickup_city`, `pickup_postcode`, `pickup_street` are fields that form an `address`.

            One of `address`, `pickup_coordinates`, `pickup_locode` is required.

            As part of an `address`, to ensure accuracy, `pickup_country` is required and at least one of `pickup_street`, `pickup_postcode`, `pickup_city`.
          default: ''
        pickup_postcode:
          type: string
          description: |
            Pick up postcode or zipcode.

            `pickup_country`, `pickup_city`, `pickup_postcode`, `pickup_street` are fields that form an `address`.

            One of `address`, `pickup_coordinates`, `pickup_locode` is required.

            As part of an `address`, to ensure accuracy, `pickup_country` is required and at least one of `pickup_street`, `pickup_postcode`, `pickup_city`.
          default: ''
        pickup_street:
          type: string
          description: |
            Pick up street.

            `pickup_country`, `pickup_city`, `pickup_postcode`, `pickup_street` are fields that form an `address`.

            One of `address`, `pickup_coordinates`, `pickup_locode` is required.

            As part of an `address`, to ensure accuracy, `pickup_country` is required and at least one of `pickup_street`, `pickup_postcode`, `pickup_city`.
          default: ''
        pickup_coordinates:
          type: string
          description: |
            Pick up geographical coordinates formatted as 'lat <number> lon <number>'.

            One of `address`, `pickup_coordinates`, `pickup_locode` is required.
          pattern: '^$|^lat -?[0-9]+(\.[0-9]+)? lon -?[0-9]+(\.[0-9]+)?$'
          default: ''
        pickup_locode:
          type: string
          pattern: '^$|^[A-Z]{5}$'
          description: |
            UN LOCODE. For a full list of options [https://unece.org/trade/cefact/unlocode-code-list-country-and-territory](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory).

            One of `address`, `pickup_coordinates`, `pickup_locode` is required.
          default: ''
        leg1_method:
          $ref: '#/components/schemas/Method'
          description: Leg transport method
          default: ''
        leg1_refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.
          type: string
          default: "false"
          enum:
            - 'TRUE'
            - 'true'
            - 'FALSE'
            - 'false'
        leg1_trade_lane:
          $ref: '#/components/schemas/OptionalTradeLane'
        leg1_imo_number:
          type: string
          pattern: '^$|^[0-9]{7}$'
          description: |
            The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.

            When an imo is provided, the leg's method is ignored.
          default: ''
        leg1_vessel_name:
          type: string
          description: |
            The vessel's name. If an IMO is provided this property will be unused.

            When a vessel name that corresponds to a single ship is provided, the leg's method is ignored.
          default: ''
        leg1_departure_on:
          description: |
            The date of the departure from the source port.

            If `leg1_departure_on` and `leg1_arrival_on` and one of `leg1_imo_number`, `leg1_vessel_name` is provided, vessel tracking will be attempted.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg1_arrival_on:
          description: |
            The date of the arrival to the destination port.

            If `leg1_departure_on` and `leg1_arrival_on` and one of `leg1_imo_number`, `leg1_vessel_name` is provided, vessel tracking will be attempted.

            We can only perform vessel tracking for shipments that finished more than 24 hours ago.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg1_country:
          type: string
          description:
            Pick up 3-letter ISO 3166 country code.

            `leg1_country`, `leg1_city`, `leg1_postcode`, `leg1_street` are fields that form an `address`.

            One of `address`, `leg1_coordinates`, `leg1_locode`, `leg1_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg1_country` is required and at least one of `leg1_street`, `leg1_postcode`, `leg1_city`.

            Examples `GBR`, `ISR`.
          default: ''
        leg1_city:
          type: string
          description: |
            Leg city.

            `leg1_country`, `leg1_city`, `leg1_postcode`, `leg1_street` are fields that form an `address`.

            One of `address`, `leg1_coordinates`, `leg1_locode`, `leg1_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg1_country` is required and at least one of `leg1_street`, `leg1_postcode`, `leg1_city`.
          default: ''
        leg1_postcode:
          type: string
          description: |
            Leg postcode or zipcode.

            `leg1_country`, `leg1_city`, `leg1_postcode`, `leg1_street` are fields that form an `address`.

            One of `address`, `leg1_coordinates`, `leg1_locode`, `leg1_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg1_country` is required and at least one of `leg1_street`, `leg1_postcode`, `leg1_city`.
          default: ''
        leg1_street:
          type: string
          description: |
            Leg street.

            `leg1_country`, `leg1_city`, `leg1_postcode`, `leg1_street` are fields that form an `address`.

            One of `address`, `leg1_coordinates`, `leg1_locode`, `leg1_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg1_country` is required and at least one of `leg1_street`, `leg1_postcode`, `leg1_city`.
          default: ''
        leg1_coordinates:
          type: string
          description: |
            Leg geographical coordinates formatted as 'lat <number> lon <number>'

            One of `address`, `leg1_coordinates`, `leg1_locode`, `leg1_distance_km` is required.
          pattern: '^$|^lat -?[0-9]+(\.[0-9]+)? lon -?[0-9]+(\.[0-9]+)?$'
          default: ''
        leg1_locode:
          type: string
          pattern: '^$|^[A-Z]{5}$'
          description: |
            UN LOCODE. For a full list of options [https://unece.org/trade/cefact/unlocode-code-list-country-and-territory](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory).

            One of `address`, `leg1_coordinates`, `leg1_locode`, `leg1_distance_km` is required.
          default: ''
        leg1_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg provided distance.

            One of `address`, `leg1_coordinates`, `leg1_locode`, `leg1_distance_km` is required.
          default: ''
        leg2_method:
          $ref: '#/components/schemas/Method'
          description: Leg transport method
          default: ''
        leg2_refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.
          type: string
          default: "false"
          enum:
            - 'TRUE'
            - 'true'
            - 'FALSE'
            - 'false'
        leg2_trade_lane:
          $ref: '#/components/schemas/OptionalTradeLane'
        leg2_imo_number:
          type: string
          pattern: '^$|^[0-9]{7}$'
          description: |
            The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.

            When an imo is provided, the leg's method is ignored.
          default: ''
        leg2_vessel_name:
          type: string
          description: |
            The vessel's name. If an IMO is provided this property will be unused.

            When a vessel name that corresponds to a single ship is provided, the leg's method is ignored.
          default: ''
        leg2_departure_on:
          description: |
            The date of the departure from the source port.

            If `leg2_departure_on` and `leg2_arrival_on` and one of `leg2_imo_number`, `leg2_vessel_name` is provided, vessel tracking will be attempted.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg2_arrival_on:
          description: |
            The date of the arrival to the destination port.

            If `leg2_departure_on` and `leg2_arrival_on` and one of `leg2_imo_number`, `leg2_vessel_name` is provided, vessel tracking will be attempted.

            We can only perform vessel tracking for shipments that finished more than 24 hours ago.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg2_country:
          type: string
          description:
            Pick up 3-letter ISO 3166 country code.

            `leg2_country`, `leg2_city`, `leg2_postcode`, `leg2_street` are fields that form an `address`.

            One of `address`, `leg2_coordinates`, `leg2_locode`, `leg2_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg2_country` is required and at least one of `leg2_street`, `leg2_postcode`, `leg2_city`.

            Examples `GBR`, `ISR`.
          default: ''
        leg2_city:
          type: string
          description: |
            Leg city.

            `leg2_country`, `leg2_city`, `leg2_postcode`, `leg2_street` are fields that form an `address`.

            One of `address`, `leg2_coordinates`, `leg2_locode`, `leg2_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg2_country` is required and at least one of `leg2_street`, `leg2_postcode`, `leg2_city`.
          default: ''
        leg2_postcode:
          type: string
          description: |
            Leg postcode or zipcode.

            `leg2_country`, `leg2_city`, `leg2_postcode`, `leg2_street` are fields that form an `address`.

            One of `address`, `leg2_coordinates`, `leg2_locode`, `leg2_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg2_country` is required and at least one of `leg2_street`, `leg2_postcode`, `leg2_city`.
          default: ''
        leg2_street:
          type: string
          description: |
            Leg street.

            `leg2_country`, `leg2_city`, `leg2_postcode`, `leg2_street` are fields that form an `address`.

            One of `address`, `leg2_coordinates`, `leg2_locode`, `leg2_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg2_country` is required and at least one of `leg2_street`, `leg2_postcode`, `leg2_city`.
          default: ''
        leg2_coordinates:
          type: string
          description: |
            Leg geographical coordinates formatted as 'lat <number> lon <number>'

            One of `address`, `leg2_coordinates`, `leg2_locode`, `leg2_distance_km` is required.
          pattern: '^$|^lat -?[0-9]+(\.[0-9]+)? lon -?[0-9]+(\.[0-9]+)?$'
          default: ''
        leg2_locode:
          type: string
          pattern: '^$|^[A-Z]{5}$'
          description: |
            UN LOCODE. For a full list of options [https://unece.org/trade/cefact/unlocode-code-list-country-and-territory](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory).

            One of `address`, `leg2_coordinates`, `leg2_locode`, `leg2_distance_km` is required.
          default: ''
        leg2_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg provided distance.

            One of `address`, `leg2_coordinates`, `leg2_locode`, `leg2_distance_km` is required.
          default: ''
        leg3_method:
          $ref: '#/components/schemas/Method'
          description: Leg transport method
          default: ''
        leg3_refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.
          type: string
          default: "false"
          enum:
            - 'TRUE'
            - 'true'
            - 'FALSE'
            - 'false'
        leg3_trade_lane:
          $ref: '#/components/schemas/OptionalTradeLane'
        leg3_imo_number:
          type: string
          pattern: '^$|^[0-9]{7}$'
          description: |
            The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.

            When an imo is provided, the leg's method is ignored.
          default: ''
        leg3_vessel_name:
          type: string
          description: |
            The vessel's name. If an IMO is provided this property will be unused.

            When a vessel name that corresponds to a single ship is provided, the leg's method is ignored.
          default: ''
        leg3_departure_on:
          description: |
            The date of the departure from the source port.

            If `leg3_departure_on` and `leg3_arrival_on` and one of `leg3_imo_number`, `leg3_vessel_name` is provided, vessel tracking will be attempted.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg3_arrival_on:
          description: |
            The date of the arrival to the destination port.

            If `leg3_departure_on` and `leg3_arrival_on` and one of `leg3_imo_number`, `leg3_vessel_name` is provided, vessel tracking will be attempted.

            We can only perform vessel tracking for shipments that finished more than 24 hours ago.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg3_country:
          type: string
          description:
            Pick up 3-letter ISO 3166 country code.

            `leg3_country`, `leg3_city`, `leg3_postcode`, `leg3_street` are fields that form an `address`.

            One of `address`, `leg3_coordinates`, `leg3_locode`, `leg3_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg3_country` is required and at least one of `leg3_street`, `leg3_postcode`, `leg3_city`.

            Examples `GBR`, `ISR`.
          default: ''
        leg3_city:
          type: string
          description: |
            Leg city.

            `leg3_country`, `leg3_city`, `leg3_postcode`, `leg3_street` are fields that form an `address`.

            One of `address`, `leg3_coordinates`, `leg3_locode`, `leg3_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg3_country` is required and at least one of `leg3_street`, `leg3_postcode`, `leg3_city`.
          default: ''
        leg3_postcode:
          type: string
          description: |
            Leg postcode or zipcode.

            `leg3_country`, `leg3_city`, `leg3_postcode`, `leg3_street` are fields that form an `address`.

            One of `address`, `leg3_coordinates`, `leg3_locode`, `leg3_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg3_country` is required and at least one of `leg3_street`, `leg3_postcode`, `leg3_city`.
          default: ''
        leg3_street:
          type: string
          description: |
            Leg street.

            `leg3_country`, `leg3_city`, `leg3_postcode`, `leg3_street` are fields that form an `address`.

            One of `address`, `leg3_coordinates`, `leg3_locode`, `leg3_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg3_country` is required and at least one of `leg3_street`, `leg3_postcode`, `leg3_city`.
          default: ''
        leg3_coordinates:
          type: string
          description: |
            Leg geographical coordinates formatted as 'lat <number> lon <number>'

            One of `address`, `leg3_coordinates`, `leg3_locode`, `leg3_distance_km` is required.
          pattern: '^$|^lat -?[0-9]+(\.[0-9]+)? lon -?[0-9]+(\.[0-9]+)?$'
          default: ''
        leg3_locode:
          type: string
          pattern: '^$|^[A-Z]{5}$'
          description: |
            UN LOCODE. For a full list of options [https://unece.org/trade/cefact/unlocode-code-list-country-and-territory](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory).

            One of `address`, `leg3_coordinates`, `leg3_locode`, `leg3_distance_km` is required.
          default: ''
        leg3_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg provided distance.

            One of `address`, `leg3_coordinates`, `leg3_locode`, `leg3_distance_km` is required.
          default: ''
        leg4_method:
          $ref: '#/components/schemas/Method'
          description: Leg transport method
          default: ''
        leg4_refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.
          type: string
          default: "false"
          enum:
            - 'TRUE'
            - 'true'
            - 'FALSE'
            - 'false'
        leg4_trade_lane:
          $ref: '#/components/schemas/OptionalTradeLane'
        leg4_imo_number:
          type: string
          pattern: '^$|^[0-9]{7}$'
          description: |
            The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.

            When an imo is provided, the leg's method is ignored.
          default: ''
        leg4_vessel_name:
          type: string
          description: |
            The vessel's name. If an IMO is provided this property will be unused.

            When a vessel name that corresponds to a single ship is provided, the leg's method is ignored.
          default: ''
        leg4_departure_on:
          description: |
            The date of the departure from the source port.

            If `leg4_departure_on` and `leg4_arrival_on` and one of `leg4_imo_number`, `leg4_vessel_name` is provided, vessel tracking will be attempted.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg4_arrival_on:
          description: |
            The date of the arrival to the destination port.

            If `leg4_departure_on` and `leg4_arrival_on` and one of `leg4_imo_number`, `leg4_vessel_name` is provided, vessel tracking will be attempted.

            We can only perform vessel tracking for shipments that finished more than 24 hours ago.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg4_country:
          type: string
          description:
            Pick up 3-letter ISO 3166 country code.

            `leg4_country`, `leg4_city`, `leg4_postcode`, `leg4_street` are fields that form an `address`.

            One of `address`, `leg4_coordinates`, `leg4_locode`, `leg4_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg4_country` is required and at least one of `leg4_street`, `leg4_postcode`, `leg4_city`.

            Examples `GBR`, `ISR`.
          default: ''
        leg4_city:
          type: string
          description: |
            Leg city.

            `leg4_country`, `leg4_city`, `leg4_postcode`, `leg4_street` are fields that form an `address`.

            One of `address`, `leg4_coordinates`, `leg4_locode`, `leg4_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg4_country` is required and at least one of `leg4_street`, `leg4_postcode`, `leg4_city`.
          default: ''
        leg4_postcode:
          type: string
          description: |
            Leg postcode or zipcode.

            `leg4_country`, `leg4_city`, `leg4_postcode`, `leg4_street` are fields that form an `address`.

            One of `address`, `leg4_coordinates`, `leg4_locode`, `leg4_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg4_country` is required and at least one of `leg4_street`, `leg4_postcode`, `leg4_city`.
          default: ''
        leg4_street:
          type: string
          description: |
            Leg street.

            `leg4_country`, `leg4_city`, `leg4_postcode`, `leg4_street` are fields that form an `address`.

            One of `address`, `leg4_coordinates`, `leg4_locode`, `leg4_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg4_country` is required and at least one of `leg4_street`, `leg4_postcode`, `leg4_city`.
          default: ''
        leg4_coordinates:
          type: string
          description: |
            Leg geographical coordinates formatted as 'lat <number> lon <number>'

            One of `address`, `leg4_coordinates`, `leg4_locode`, `leg4_distance_km` is required.
          pattern: '^$|^lat -?[0-9]+(\.[0-9]+)? lon -?[0-9]+(\.[0-9]+)?$'
          default: ''
        leg4_locode:
          type: string
          pattern: '^$|^[A-Z]{5}$'
          description: |
            UN LOCODE. For a full list of options [https://unece.org/trade/cefact/unlocode-code-list-country-and-territory](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory).

            One of `address`, `leg4_coordinates`, `leg4_locode`, `leg4_distance_km` is required.
          default: ''
        leg4_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg provided distance.

            One of `address`, `leg4_coordinates`, `leg4_locode`, `leg4_distance_km` is required.
          default: ''
        leg5_method:
          $ref: '#/components/schemas/Method'
          description: Leg transport method
          default: ''
        leg5_refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.
          type: string
          default: "false"
          enum:
            - 'TRUE'
            - 'true'
            - 'FALSE'
            - 'false'
        leg5_trade_lane:
          $ref: '#/components/schemas/OptionalTradeLane'
        leg5_imo_number:
          type: string
          pattern: '^$|^[0-9]{7}$'
          description: |
            The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.

            When an imo is provided, the leg's method is ignored.
          default: ''
        leg5_vessel_name:
          type: string
          description: |
            The vessel's name. If an IMO is provided this property will be unused.

            When a vessel name that corresponds to a single ship is provided, the leg's method is ignored.
          default: ''
        leg5_departure_on:
          description: |
            The date of the departure from the source port.

            If `leg5_departure_on` and `leg5_arrival_on` and one of `leg5_imo_number`, `leg5_vessel_name` is provided, vessel tracking will be attempted.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg5_arrival_on:
          description: |
            The date of the arrival to the destination port.

            If `leg5_departure_on` and `leg5_arrival_on` and one of `leg5_imo_number`, `leg5_vessel_name` is provided, vessel tracking will be attempted.

            We can only perform vessel tracking for shipments that finished more than 24 hours ago.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg5_country:
          type: string
          description:
            Pick up 3-letter ISO 3166 country code.

            `leg5_country`, `leg5_city`, `leg5_postcode`, `leg5_street` are fields that form an `address`.

            One of `address`, `leg5_coordinates`, `leg5_locode`, `leg5_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg5_country` is required and at least one of `leg5_street`, `leg5_postcode`, `leg5_city`.

            Examples `GBR`, `ISR`.
          default: ''
        leg5_city:
          type: string
          description: |
            Leg city.

            `leg5_country`, `leg5_city`, `leg5_postcode`, `leg5_street` are fields that form an `address`.

            One of `address`, `leg5_coordinates`, `leg5_locode`, `leg5_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg5_country` is required and at least one of `leg5_street`, `leg5_postcode`, `leg5_city`.
          default: ''
        leg5_postcode:
          type: string
          description: |
            Leg postcode or zipcode.

            `leg5_country`, `leg5_city`, `leg5_postcode`, `leg5_street` are fields that form an `address`.

            One of `address`, `leg5_coordinates`, `leg5_locode`, `leg5_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg5_country` is required and at least one of `leg5_street`, `leg5_postcode`, `leg5_city`.
          default: ''
        leg5_street:
          type: string
          description: |
            Leg street.

            `leg5_country`, `leg5_city`, `leg5_postcode`, `leg5_street` are fields that form an `address`.

            One of `address`, `leg5_coordinates`, `leg5_locode`, `leg5_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg5_country` is required and at least one of `leg5_street`, `leg5_postcode`, `leg5_city`.
          default: ''
        leg5_coordinates:
          type: string
          description: |
            Leg geographical coordinates formatted as 'lat <number> lon <number>'

            One of `address`, `leg5_coordinates`, `leg5_locode`, `leg5_distance_km` is required.
          pattern: '^$|^lat -?[0-9]+(\.[0-9]+)? lon -?[0-9]+(\.[0-9]+)?$'
          default: ''
        leg5_locode:
          type: string
          pattern: '^$|^[A-Z]{5}$'
          description: |
            UN LOCODE. For a full list of options [https://unece.org/trade/cefact/unlocode-code-list-country-and-territory](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory).

            One of `address`, `leg5_coordinates`, `leg5_locode`, `leg5_distance_km` is required.
          default: ''
        leg5_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg provided distance.

            One of `address`, `leg5_coordinates`, `leg5_locode`, `leg5_distance_km` is required.
          default: ''
        leg6_method:
          $ref: '#/components/schemas/Method'
          description: Leg transport method
          default: ''
        leg6_refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.
          type: string
          default: "false"
          enum:
            - 'TRUE'
            - 'true'
            - 'FALSE'
            - 'false'
        leg6_trade_lane:
          $ref: '#/components/schemas/OptionalTradeLane'
        leg6_imo_number:
          type: string
          pattern: '^$|^[0-9]{7}$'
          description: |
            The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.

            When an imo is provided, the leg's method is ignored.
          default: ''
        leg6_vessel_name:
          type: string
          description: |
            The vessel's name. If an IMO is provided this property will be unused.

            When a vessel name that corresponds to a single ship is provided, the leg's method is ignored.
          default: ''
        leg6_departure_on:
          description: |
            The date of the departure from the source port.
            
            If `leg6_departure_on` and `leg6_arrival_on` and one of `leg6_imo_number`, `leg6_vessel_name` is provided, vessel tracking will be attempted.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg6_arrival_on:
          description: |
            The date of the arrival to the destination port.

            If `leg6_departure_on` and `leg6_arrival_on` and one of `leg6_imo_number`, `leg6_vessel_name` is provided, vessel tracking will be attempted.

            We can only perform vessel tracking for shipments that finished more than 24 hours ago.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg6_country:
          type: string
          description:
            Pick up 3-letter ISO 3166 country code.

            `leg6_country`, `leg6_city`, `leg6_postcode`, `leg6_street` are fields that form an `address`.

            One of `address`, `leg6_coordinates`, `leg6_locode`, `leg6_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg6_country` is required and at least one of `leg6_street`, `leg6_postcode`, `leg6_city`.

            Examples `GBR`, `ISR`.
          default: ''
        leg6_city:
          type: string
          description: |
            Leg city.

            `leg6_country`, `leg6_city`, `leg6_postcode`, `leg6_street` are fields that form an `address`.

            One of `address`, `leg6_coordinates`, `leg6_locode`, `leg6_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg6_country` is required and at least one of `leg6_street`, `leg6_postcode`, `leg6_city`.
          default: ''
        leg6_postcode:
          type: string
          description: |
            Leg postcode or zipcode.

            `leg6_country`, `leg6_city`, `leg6_postcode`, `leg6_street` are fields that form an `address`.

            One of `address`, `leg6_coordinates`, `leg6_locode`, `leg6_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg6_country` is required and at least one of `leg6_street`, `leg6_postcode`, `leg6_city`.
          default: ''
        leg6_street:
          type: string
          description: |
            Leg street.

            `leg6_country`, `leg6_city`, `leg6_postcode`, `leg6_street` are fields that form an `address`.

            One of `address`, `leg6_coordinates`, `leg6_locode`, `leg6_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg6_country` is required and at least one of `leg6_street`, `leg6_postcode`, `leg6_city`.
          default: ''
        leg6_coordinates:
          type: string
          description: |
            Leg geographical coordinates formatted as 'lat <number> lon <number>'

            One of `address`, `leg6_coordinates`, `leg6_locode`, `leg6_distance_km` is required.
          pattern: '^$|^lat -?[0-9]+(\.[0-9]+)? lon -?[0-9]+(\.[0-9]+)?$'
          default: ''
        leg6_locode:
          type: string
          pattern: '^$|^[A-Z]{5}$'
          description: |
            UN LOCODE. For a full list of options [https://unece.org/trade/cefact/unlocode-code-list-country-and-territory](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory).

            One of `address`, `leg6_coordinates`, `leg6_locode`, `leg6_distance_km` is required.
          default: ''
        leg6_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg provided distance.

            One of `address`, `leg6_coordinates`, `leg6_locode`, `leg6_distance_km` is required.
          default: ''
        leg7_method:
          $ref: '#/components/schemas/Method'
          description: Leg transport method
          default: ''
        leg7_refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.
          type: string
          default: "false"
          enum:
            - 'TRUE'
            - 'true'
            - 'FALSE'
            - 'false'
        leg7_trade_lane:
          $ref: '#/components/schemas/OptionalTradeLane'
        leg7_imo_number:
          type: string
          pattern: '^$|^[0-9]{7}$'
          description: |
            The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.

            When an imo is provided, the leg's method is ignored.
          default: ''
        leg7_vessel_name:
          type: string
          description: |
            The vessel's name. If an IMO is provided this property will be unused.

            When a vessel name that corresponds to a single ship is provided, the leg's method is ignored.
          default: ''
        leg7_departure_on:
          description: |
            The date of the departure from the source port.

            If `leg7_departure_on` and `leg7_arrival_on` and one of `leg7_imo_number`, `leg7_vessel_name` is provided, vessel tracking will be attempted.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg7_arrival_on:
          description: |
            The date of the arrival to the destination port.

            If `leg7_departure_on` and `leg7_arrival_on` and one of `leg7_imo_number`, `leg7_vessel_name` is provided, vessel tracking will be attempted.

            We can only perform vessel tracking for shipments that finished more than 24 hours ago.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg7_country:
          type: string
          description:
            Pick up 3-letter ISO 3166 country code.

            `leg7_country`, `leg7_city`, `leg7_postcode`, `leg7_street` are fields that form an `address`.

            One of `address`, `leg7_coordinates`, `leg7_locode`, `leg7_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg7_country` is required and at least one of `leg7_street`, `leg7_postcode`, `leg7_city`.

            Examples `GBR`, `ISR`.
          default: ''
        leg7_city:
          type: string
          description: |
            Leg city.

            `leg7_country`, `leg7_city`, `leg7_postcode`, `leg7_street` are fields that form an `address`.

            One of `address`, `leg7_coordinates`, `leg7_locode`, `leg7_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg7_country` is required and at least one of `leg7_street`, `leg7_postcode`, `leg7_city`.
          default: ''
        leg7_postcode:
          type: string
          description: |
            Leg postcode or zipcode.

            `leg7_country`, `leg7_city`, `leg7_postcode`, `leg7_street` are fields that form an `address`.

            One of `address`, `leg7_coordinates`, `leg7_locode`, `leg7_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg7_country` is required and at least one of `leg7_street`, `leg7_postcode`, `leg7_city`.
          default: ''
        leg7_street:
          type: string
          description: |
            Leg street.

            `leg7_country`, `leg7_city`, `leg7_postcode`, `leg7_street` are fields that form an `address`.

            One of `address`, `leg7_coordinates`, `leg7_locode`, `leg7_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg7_country` is required and at least one of `leg7_street`, `leg7_postcode`, `leg7_city`.
          default: ''
        leg7_coordinates:
          type: string
          description: |
            Leg geographical coordinates formatted as 'lat <number> lon <number>'

            One of `address`, `leg7_coordinates`, `leg7_locode`, `leg7_distance_km` is required.
          pattern: '^$|^lat -?[0-9]+(\.[0-9]+)? lon -?[0-9]+(\.[0-9]+)?$'
          default: ''
        leg7_locode:
          type: string
          pattern: '^$|^[A-Z]{5}$'
          description: |
            UN LOCODE. For a full list of options [https://unece.org/trade/cefact/unlocode-code-list-country-and-territory](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory).

            One of `address`, `leg7_coordinates`, `leg7_locode`, `leg7_distance_km` is required.
          default: ''
        leg7_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg provided distance.

            One of `address`, `leg7_coordinates`, `leg7_locode`, `leg7_distance_km` is required.
          default: ''
        leg8_method:
          $ref: '#/components/schemas/Method'
          description: Leg transport method
          default: ''
        leg8_refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.
          type: string
          default: "false"
          enum:
            - 'TRUE'
            - 'true'
            - 'FALSE'
            - 'false'
        leg8_trade_lane:
          $ref: '#/components/schemas/OptionalTradeLane'
        leg8_imo_number:
          type: string
          pattern: '^$|^[0-9]{7}$'
          description: |
            The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.

            When an imo is provided, the leg's method is ignored.
          default: ''
        leg8_vessel_name:
          type: string
          description: |
            The vessel's name. If an IMO is provided this property will be unused.

            When a vessel name that corresponds to a single ship is provided, the leg's method is ignored.
          default: ''
        leg8_departure_on:
          description: |
            The date of the departure from the source port.

            If `leg8_departure_on` and `leg8_arrival_on` and one of `leg8_imo_number`, `leg8_vessel_name` is provided, vessel tracking will be attempted.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg8_arrival_on:
          description: |
            The date of the arrival to the destination port.

            If `leg8_departure_on` and `leg8_arrival_on` and one of `leg8_imo_number`, `leg8_vessel_name` is provided, vessel tracking will be attempted.

            We can only perform vessel tracking for shipments that finished more than 24 hours ago.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg8_country:
          type: string
          description:
            Pick up 3-letter ISO 3166 country code.

            `leg8_country`, `leg8_city`, `leg8_postcode`, `leg8_street` are fields that form an `address`.

            One of `address`, `leg8_coordinates`, `leg8_locode`, `leg8_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg8_country` is required and at least one of `leg8_street`, `leg8_postcode`, `leg8_city`.

            Examples `GBR`, `ISR`.
          default: ''
        leg8_city:
          type: string
          description: |
            Leg city.

            `leg8_country`, `leg8_city`, `leg8_postcode`, `leg8_street` are fields that form an `address`.

            One of `address`, `leg8_coordinates`, `leg8_locode`, `leg8_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg8_country` is required and at least one of `leg8_street`, `leg8_postcode`, `leg8_city`.
          default: ''
        leg8_postcode:
          type: string
          description: |
            Leg postcode or zipcode.

            `leg8_country`, `leg8_city`, `leg8_postcode`, `leg8_street` are fields that form an `address`.

            One of `address`, `leg8_coordinates`, `leg8_locode`, `leg8_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg8_country` is required and at least one of `leg8_street`, `leg8_postcode`, `leg8_city`.
          default: ''
        leg8_street:
          type: string
          description: |
            Leg street.

            `leg8_country`, `leg8_city`, `leg8_postcode`, `leg8_street` are fields that form an `address`.

            One of `address`, `leg8_coordinates`, `leg8_locode`, `leg8_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg8_country` is required and at least one of `leg8_street`, `leg8_postcode`, `leg8_city`.
          default: ''
        leg8_coordinates:
          type: string
          description: |
            Leg geographical coordinates formatted as 'lat <number> lon <number>'

            One of `address`, `leg8_coordinates`, `leg8_locode`, `leg8_distance_km` is required.
          pattern: '^$|^lat -?[0-9]+(\.[0-9]+)? lon -?[0-9]+(\.[0-9]+)?$'
          default: ''
        leg8_locode:
          type: string
          pattern: '^$|^[A-Z]{5}$'
          description: |
            UN LOCODE. For a full list of options [https://unece.org/trade/cefact/unlocode-code-list-country-and-territory](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory).

            One of `address`, `leg8_coordinates`, `leg8_locode`, `leg8_distance_km` is required.
          default: ''
        leg8_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg provided distance.

            One of `address`, `leg8_coordinates`, `leg8_locode`, `leg8_distance_km` is required.
          default: ''
        leg9_method:
          $ref: '#/components/schemas/Method'
          description: Leg transport method
          default: ''
        leg9_refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.
          type: string
          default: "false"
          enum:
            - 'TRUE'
            - 'true'
            - 'FALSE'
            - 'false'
        leg9_trade_lane:
          $ref: '#/components/schemas/OptionalTradeLane'
        leg9_imo_number:
          type: string
          pattern: '^$|^[0-9]{7}$'
          description: |
            The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.

            When an imo is provided, the leg's method is ignored.
          default: ''
        leg9_vessel_name:
          type: string
          description: |
            The vessel's name. If an IMO is provided this property will be unused.

            When a vessel name that corresponds to a single ship is provided, the leg's method is ignored.
          default: ''
        leg9_departure_on:
          description: |
            The date of the departure from the source port.

            If `leg9_departure_on` and `leg9_arrival_on` and one of `leg9_imo_number`, `leg9_vessel_name` is provided, vessel tracking will be attempted.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg9_arrival_on:
          description: |
            The date of the arrival to the destination port.

            If `leg9_departure_on` and `leg9_arrival_on` and one of `leg9_imo_number`, `leg9_vessel_name` is provided, vessel tracking will be attempted.

            We can only perform vessel tracking for shipments that finished more than 24 hours ago.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg9_country:
          type: string
          description:
            Pick up 3-letter ISO 3166 country code.

            `leg9_country`, `leg9_city`, `leg9_postcode`, `leg9_street` are fields that form an `address`.

            One of `address`, `leg9_coordinates`, `leg9_locode`, `leg9_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg9_country` is required and at least one of `leg9_street`, `leg9_postcode`, `leg9_city`.

            Examples `GBR`, `ISR`.
          default: ''
        leg9_city:
          type: string
          description: |
            Leg city.

            `leg9_country`, `leg9_city`, `leg9_postcode`, `leg9_street` are fields that form an `address`.

            One of `address`, `leg9_coordinates`, `leg9_locode`, `leg9_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg9_country` is required and at least one of `leg9_street`, `leg9_postcode`, `leg9_city`.
          default: ''
        leg9_postcode:
          type: string
          description: |
            Leg postcode or zipcode.

            `leg9_country`, `leg9_city`, `leg9_postcode`, `leg9_street` are fields that form an `address`.

            One of `address`, `leg9_coordinates`, `leg9_locode`, `leg9_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg9_country` is required and at least one of `leg9_street`, `leg9_postcode`, `leg9_city`.
          default: ''
        leg9_street:
          type: string
          description: |
            Leg street.

            `leg9_country`, `leg9_city`, `leg9_postcode`, `leg9_street` are fields that form an `address`.

            One of `address`, `leg9_coordinates`, `leg9_locode`, `leg9_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg9_country` is required and at least one of `leg9_street`, `leg9_postcode`, `leg9_city`.
          default: ''
        leg9_coordinates:
          type: string
          description: |
            Leg geographical coordinates formatted as 'lat <number> lon <number>'

            One of `address`, `leg9_coordinates`, `leg9_locode`, `leg9_distance_km` is required.
          pattern: '^$|^lat -?[0-9]+(\.[0-9]+)? lon -?[0-9]+(\.[0-9]+)?$'
          default: ''
        leg9_locode:
          type: string
          pattern: '^$|^[A-Z]{5}$'
          description: |
            UN LOCODE. For a full list of options [https://unece.org/trade/cefact/unlocode-code-list-country-and-territory](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory).

            One of `address`, `leg9_coordinates`, `leg9_locode`, `leg9_distance_km` is required.
          default: ''
        leg9_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg provided distance.

            One of `address`, `leg9_coordinates`, `leg9_locode`, `leg9_distance_km` is required.
          default: ''
        leg10_method:
          $ref: '#/components/schemas/Method'
          description: Leg transport method
          default: ''
        leg10_refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.
          type: string
          default: "false"
          enum:
            - 'TRUE'
            - 'true'
            - 'FALSE'
            - 'false'
        leg10_trade_lane:
          $ref: '#/components/schemas/OptionalTradeLane'
        leg10_imo_number:
          type: string
          pattern: '^$|^[0-9]{7}$'
          description: |
            The vessel's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.

            When an imo is provided, the leg's method is ignored.
          default: ''
        leg10_vessel_name:
          type: string
          description: |
            The vessel's name. If an IMO is provided this property will be unused.

            When a vessel name that corresponds to a single ship is provided, the leg's method is ignored.
          default: ''
        leg10_departure_on:
          description: |
            The date of the departure from the source port.
            
            If `leg10_departure_on` and `leg10_arrival_on` and one of `leg10_imo_number`, `leg10_vessel_name` is provided, vessel tracking will be attempted.
          type: string
          pattern: '^$|^[0-9]{4}-(1[0-2]|0[1-9])-(3[01]|[12][0-9]|0[1-9])$'
        leg10_arrival_on:
          description: |
            The date of the arrival to the destination port.

            If `leg10_departure_on` and `leg10_arrival_on` and one of `leg10_imo_number`, `leg10_vessel_name` is provided, vessel tracking will be attempted.
            
            We can only perform vessel tracking for shipments that finished more than 24 hours ago.
          type: string
        leg10_country:
          type: string
          description:
            Pick up 3-letter ISO 3166 country code.

            `leg10_country`, `leg10_city`, `leg10_postcode`, `leg10_street` are fields that form an `address`.

            One of `address`, `leg10_coordinates`, `leg10_locode`, `leg10_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg10_country` is required and at least one of `leg10_street`, `leg10_postcode`, `leg10_city`.

            Examples `GBR`, `ISR`.
          default: ''
        leg10_city:
          type: string
          description: |
            Leg city.

            `leg10_country`, `leg10_city`, `leg10_postcode`, `leg10_street` are fields that form an `address`.

            One of `address`, `leg10_coordinates`, `leg10_locode`, `leg10_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg10_country` is required and at least one of `leg10_street`, `leg10_postcode`, `leg10_city`.
          default: ''
        leg10_postcode:
          type: string
          description: |
            Leg postcode or zipcode.

            `leg10_country`, `leg10_city`, `leg10_postcode`, `leg10_street` are fields that form an `address`.

            One of `address`, `leg10_coordinates`, `leg10_locode`, `leg10_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg10_country` is required and at least one of `leg10_street`, `leg10_postcode`, `leg10_city`.
          default: ''
        leg10_street:
          type: string
          description: |
            Leg street.

            `leg10_country`, `leg10_city`, `leg10_postcode`, `leg10_street` are fields that form an `address`.

            One of `address`, `leg10_coordinates`, `leg10_locode`, `leg10_distance_km` is required.

            As part of an `address`, to ensure accuracy, `leg10_country` is required and at least one of `leg10_street`, `leg10_postcode`, `leg10_city`.
          default: ''
        leg10_coordinates:
          type: string
          description: |
            Leg geographical coordinates formatted as 'lat <number> lon <number>'

            One of `address`, `leg10_coordinates`, `leg10_locode`, `leg10_distance_km` is required.
          pattern: '^$|^lat -?[0-9]+(\.[0-9]+)? lon -?[0-9]+(\.[0-9]+)?$'
          default: ''
        leg10_locode:
          type: string
          pattern: '^$|^[A-Z]{5}$'
          description: |
            UN LOCODE. For a full list of options [https://unece.org/trade/cefact/unlocode-code-list-country-and-territory](https://unece.org/trade/cefact/unlocode-code-list-country-and-territory).

            One of `address`, `leg10_coordinates`, `leg10_locode`, `leg10_distance_km` is required.
          default: ''
        leg10_distance_km:
          type: string
          pattern: '^$|^[0-9]+(\.[0-9]+)?$'
          description: |
            Leg provided distance.

            One of `address`, `leg10_coordinates`, `leg10_locode`, `leg10_distance_km` is required.
          default: ''
    Method:
      description: |
        The transport method.

        Required unless `imo` or `vessel_name` is provided.

        Pick one of the following options.

        Examples: `cargo_plane`, `container_ship`, `diesel_truck`.
      oneOf:
        - $ref: 'api-schema.yml#/components/schemas/SimpleShippingMethod'
        - $ref: 'api-schema.yml#/components/schemas/SimpleSeaShippingMethod'
        - type: string
          x-lune-name: Container ship method
          enum:
            - container_ship
            - ''
    MultiLegRowOut:
      type: object
      unevaluatedProperties: false
      allOf:
        - $ref: '#/components/schemas/MultiLegRowIn'
        - $ref: '#/components/schemas/MultiLegRowResults'
    MultiLegRowInStrict:
      type: object
      unevaluatedProperties: false
      allOf:
        - $ref: '#/components/schemas/MultiLegRowIn'
    OptionalTradeLane:
      description: |
        `trade_lane` requires `method` to be `container_ship'.
      oneOf:
        - $ref: 'api-schema.yml#/components/schemas/TradeLane'
        - type: string
          x-lune-name: No trade lane
          enum:
            - ''
    OptionalShippedAt:
      description: |
        The date and time of shipping the goods for the purpose of analytics (it doesn't
        affect emission calculations in any way).

        If a value is provided when creating or updating an estimate we use the value.
        Otherwise defaults to the current time when creating estimates and remains
        unchanged when updating estimates.

        This property must be formatted as RFC 3339, section 5.6 timestamp.

        Examples:
        * 2023-12-01T12:30:30.000Z
        * 2023-12-01T12:30:30Z
        * 2023-12-01T11:30:30+01.00
      oneOf:
        - $ref: 'api-schema.yml#/components/schemas/ShippedAt'
        - type: string
          x-lune-name: No trade lane
          enum:
            - ''
