openapi: 3.0.1
info:
  title: Lune API Reference
  version: '1.0'
  contact:
    name: Lune Support
    email: support@lune.co
  termsOfService: https://lune.co/terms

  description: |
    # Quick start
    The Lune API makes it very easy to purchase carbon offsets:

    1. <a href="https://dashboard.lune.co/signup" target="_blank">Sign up</a> to Lune
    2. Validate your email
    3. <a href="https://dashboard.lune.co/api-keys" target="_blank">Get your API Key</a> from the dashboard

    then:

    ```
    curl https://api.lune.co/v1/orders/by-mass \
      -H 'Authorization: Bearer <API_KEY>' \
      -H 'Content-Type: application/json' \
      -X POST \
      -d '{"mass": { "amount": "100.510", "unit": "t"} }'
    ```

    You've just purchased 100.51 tonnes of Carbon Offsets!

    # Authentication
    The Lune API uses API Keys to authenticate requests.

    An API key corresponds to a specific account (a user can have access to multiple accounts, including test accounts, see the <a href="#section/Live-and-test-accounts">Live and test accounts section</a>).

    You can view and manage your keys from the Lune Dashboard.

    Please keep the keys secret.

    If a key is compromised you can delete and re-create a new one at any time.

    API keys are used as Bearer tokens included in the Authorization header.

    ```
    Authorization: Bearer <API_KEY>
    ```

    An API key is linked to a specific account but they can access all accounts that the organisation owning
    the API key has access to. This can be done using the `Lune-Account` header. Provide a different account
    ID in the header and that account will be used to perform the API call.

    # Content type

    It's assumed that the incoming requests contain `application/json` payloads, so you can either explicitly
    send the `Content-Type` header set to `application/json` or just skip the header altogether. Setting the
    header to a value different from `application/json` will result in an HTTP 415 Unsupported Media Type
    error.

    The responses are returned using JSON with the appropriate `Content-Type` value (`application/json`)
    unless specified otherwise.

    # Live and test accounts

    A user can have access to multiple accounts, in the simplest case there'll be one live account and one test account by default.

    Live accounts are the accounts through which you purchase real offsets and there'll be real money changing hands.

    Test accounts behave similarly (you can place orders, get quotes, fetch orders and activity),
    but there's no real money or real offsets involved. The purpose of test accounts is to be able
    to experiment with the API with no consequences.

    To better simulate the full order flow there's a process that'll credit your test account every once in a while (to bring the outstanding balance to zero, if there are any orders made) and go through the carbon credit retirement process for any orders needing it.

    Orders and acitivity belong to an account used to generate them, so if you make an order using live account A you won't see it on test account B's order list and vice versa.

    # Pagination
    All GET endpoints that return an array of resources are paginated.

    Lune supports cursor-based pagination. This means that, to get all objects, you must paginate through the results by providing the last resource id as a *after* query parameter.

    Each result includes a *has_more* boolean field. If this is true, then the next page requested will return additional results.

    By default, each page returns 10 objects, however, by setting *limit* you can request up to 100 objects.

    # Rate limits
    A rate limit is in place to safeguard against traffic bursts and therefore ensure the API is stable.

    The default rate limit is currently set at **15 requests per second**.

    Requests made after exceeding the rate limit return responses with a 429 status code.

    If you require additional capacity, please get in touch.

    # Errors
    All error responses return conventional HTTP status codes.

    Additionally, the response's body includes all raised by Lune.

    Each error returns an *error_code* and a human readable *message*.

    *error_code*'s are useful to handle errors programmatically.

    # Order status and lifecycle
    Orders have statuses and follow a precise lifecycle.

    Please familiarise with the following:

    <img src="https://assets.lune.co/docs/order-status-transitions-same-bg.png" />

servers:
  - url: https://api.lune.co/v1
    description: Lune's REST API

tags:
  - name: Orders
    description: |
      Get a quote, create and fetch orders.
  - name: Projects
    description: Get projects and bundles
  - name: Emission estimates
    description: Estimate CO2 emissions (caused by shipping goods for example).
  - name: Offset links
    description: Provide your customers with links to fund a bundle of their choice.
  - name: Webhooks
    description: A way to get notified about order state changes.
  - name: Webhook Request
    description: |
      After creating a webhook you can listen to events that occur in your Lune Account. This enables you to react to these events. Think of a webhook as a way to get notifications of activity that happens in your account.

      API calls are a mechanism for *you*, the API client, to send requests to Lune (for example to place an
      order). Webhooks are a mechanism for Lune to send notifications to you, right when a relevant event happens,
      without you having to repeatedly call the API and ask for the information (which is wasteful in terms
      of resources).

      Currently, webhooks events are limited to order status changes that changes in your account (an event is generated whenever an order status changes).

      Your webhook endpoint has to respond with a 2xx HTTP status code within 30 seconds. If we don't get a 2xx status code or the request times out we will treat is as failure and try to resend it with a delay.

      The events sent to the webhook endpoint are batched – we send multiple events in a single request.
      There's a limit to the number of events we send at once, if there are more events waiting to be sent
      we only send a number of the oldest ones.

      # Delivery guarantees

      * Events are always delivered in the order they happened from the point of view of Lune's systems.
        The order may not be obvious when multiple actions are performed concurrently (for example when
        you place multiple orders at the same time you can't know which order will generate events first).
      * Particularly, order events corresponding to one order are always delivered in the order
        consistent with the transitions described in the "Order status and lifecycle" documentation section.
      * Events are always delivered in the same order (this concerns retries).
      * Events are delivered at least once – they may be tried to be delivered multiple times
        if there were earlier attemps that failed (either because of a communication error or a non-2xx HTTP
        status code). If you endpoint responds with a 2xx status code there's no guarantee that the response
        will be registered by Lune's systems – the response may be lost in transit.
      * Lune only attempts one request to your webhook endpoint at a time. There are some caveats:

        * If we successfully manage to send a request but the communication is interrupted before we get
          a response we have no way to know if the request reached your webhook endpoint.
        * If the 30 second timeout is reached we abandon the request on our side but we have no way
          of ensuring that the processing of the request on your side isn't continuing.

        With that in mind, if you depend on there being strictly one and only one webhook request being
        processed at any given time it's your responsibility to ensure that.

      # Idempotency
      It is necessary to handle the same events being delivered multiple times (for the reasons mentioned
      above). This is achieved by keeping track of already processed `event_id`s – if you see the same
      `event_id` again you know you can ignore the event it corresponds to. Alternatively, you can keep
      track of the events `sequence`s – this string value is guaranteed to be monotonically increasing and
      you can use it as a last processed event marker. If you stored `B` as last processed event sequence
      value and you receive a re-delivered event with sequence `A` that contains a value lexicographically
      "smaller" than `B` then you know you can ignore the event.

      # Payload authentication and integrity
      [HMAC](https://en.wikipedia.org/wiki/HMAC) is a security measure which allows you to verify the
      integrity and authenticity of the data you’re receiving. Every request we make to your webhook
      endpoint has a header `Lune-HMAC` set. The header has to be used to validate the integrity and
      authenticity of the payload, which ensures that the request actually comes from Lune and no one has
      tampered with it.

      The header has the following format:

      ```
      timestamp=TIMESTAMP,account=ACCOUNT_ID,v1=HMAC_VALUE,...
      ```

      Where:
      * `TIMESTAMP` is the current [Unix epoch](https://en.wikipedia.org/wiki/Unix_time). It is used to
      verify the message has an acceptable age.
      * `ACCOUNT_ID` is the account id associated with the webhook. It can be used to distinguish multiple
      webhooks pointed to the same URL.
      * `HMAC_VALUE` is the value calculated in the following way:

      ```
      HMAC-256(SECRET, TIMESTAMP + "." + BODY)
      ```

      * `HMAC-256` is the HMAC version using the SHA-256 hashing algorithm
      * `SECRET` is a per-webhook secret generated when the webhook is created. The secret can be
        regenerated and fetched from the API.
      * `BODY` is the body of the incoming request

      Lune reserves the right to send multiple `v1=...` blocks in the header (in case there are multiple
      secrets active) and your code has to handle that.

      To verify the integrity and authenticity of the request you have to follow these steps\:
      * (Optional) Determine which webhook is sending you data and select the appropriate `SECRET` by
      extracting the account from the header (`ACCOUNT_ID` referrenced above)
      * Extract the timestamp from the header (we call it `TIMESTAMP` from now on)
      * Verify that the `TIMESTAMP` is no more than two minutes in the past (this ensures that you don't
        try to process old requests). If the `TIMESTAMP` is too old you should reject the request with
        a non-2xx status code.
      * Calculate `YOUR_HMAC = HMAC-256(SECRET, TIMESTAMP + "." + BODY)
      * Verify that the header contains an `v1=...` block with value equal to your `YOUR_HMAC` value.

      An HTTP request with missing or malformed `Lune-HMAC` header or for which the HMAC verification
      fails (the calculated HMAC does not match any of the HMACs in the `Lune-HMAC` header) must not be
      processed in any way (no action to be performed based on the payload) and must be rejected by
      returning a non-2xx HTTP status code.

      # A mock webhook Request
      The request itself consist of two headers and the payload. One of the headers is the previously mentioned HMAC header, the other is the *Content-Type* which is *application/json*.

      For testing purposes, if you want to produce an example request, this can be simulated with
      ```
      curl <WEBHOOK_URL> \
        -H 'Lune-HMAC: <THE_HEADER_VALUE>' \
        -H 'Content-Type: application/json' \
        -X POST \
        -d '{"events":[{"event_type":"order.received", "event_id": 1, "data": {"type": "quantity", "requested_quantity": "1000", "id": "va1BER4JZqnzPkYxJgALg0GeQDoXlWO5", "status": "received","currency": "GBP","created_at": "1985-04-12T23:20:50.52Z","metadata": {}}, "api_version": "v1"},{"event_type": "order.placed”, "event_id": 2, "data": {"type": "quantity", "requested_quantity": "1000", "id": "va1BER4JZqnzPkYxJgALg0GeQDoXlWO5", "status": "received","currency": "GBP","created_at": "1985-04-12T23:20:50.52Z","metadata": {}}, "api_version": "v1"}]}'
      ```

      where `WEBHOOK_URL` is your webhook endpoint and `THE_HEADER_VALUE` of form `timestamp=...,v1=...`
      can be produced using the algorithm above.

      # Handling unknown event_types
      Lune may introduce events with new `event_type`s. Your code should ignore unknown `event_type`s
      to make sure it remains future-proof.

      # The payload format
      The `/WebhookRequest` mock endpoint documents the data format that the webhook endpoints should expect.

paths:
  /activity:
    get:
      summary: Get an account's activity
      operationId: getActivity
      security:
        - BearerAuth: []
      tags:
        - Activity
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedActivity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts/me:
    get:
      summary: Get an account
      operationId: getAccount
      security:
        - BearerAuth: []
      tags:
        - Accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '400':
          $ref: '#/components/responses/BadRequest'
  /accounts/client:
    post:
      summary: Create a client account
      operationId: createClientAccount
      security:
        - BearerAuth: []
      tags:
        - Client Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientAccountRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    get:
      summary: List client accounts
      operationId: listClientAccounts
      security:
        - BearerAuth: []
      tags:
        - Client Accounts
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
        - name: type
          in: query
          description:
            Filter accounts based on type.
          schema:
            $ref: '#/components/schemas/AccountType'
        - name: name
          in: query
          description: |
            Filter accounts based on name (case insensitive).

            The value can appear at the beggining, middle or end on the actual account name.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_]{3,}$'
            example: 'Merchant_X'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedClientAccounts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts/client/{id}:
    put:
      summary: Update a client account
      operationId: updateClientAccount
      security:
        - BearerAuth: []
      tags:
        - Client Accounts
      parameters:
        - name: id
          in: path
          required: true
          description: The account's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientAccount'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts:
    post:
      summary: Create an account pair
      description: |
        Create a pair of live and test accounts. The accounts are linked via the `sibling_id` property.
      operationId: createAccountPair
      security:
        - BearerAuth: []
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccountRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPair'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    get:
      summary: List accounts
      operationId: listAccounts
      security:
        - BearerAuth: []
      tags:
        - Accounts
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
        - name: type
          in: query
          description:
            Filter accounts based on type.
          schema:
            $ref: '#/components/schemas/AccountType'
        - name: name
          in: query
          description:
            Filter accounts based on name (case insensitive).

            The value can appear at the beggining, middle or end on the actual account name.
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_]{3,}$'
            example: 'Merchant_X'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAccounts'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /accounts/{id}:
    put:
      summary: Update an account
      description: |
        Update an account. Live accounts will replicate a name change to its sibling account. Test accounts name updates are disallowed (name property must match the current account name).
      operationId: updateAccount
      security:
        - BearerAuth: []
      tags:
        - Accounts
      parameters:
        - name: id
          in: path
          required: true
          description: The account's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /analytics:
    get:
      summary: Get an account analytics
      operationId: getAnalytics
      security:
        - BearerAuth: [ ]
      tags:
        - Analytics
      parameters:
        - name: start
          in: query
          description:
            The start date of the custom date range.

            Defaults to 30 days ago if not specified.
          schema:
            type: string
            format: date
            example: '2019-01-01'
        - name: end
          in: query
          description:
            The end date of the custom date range.

            Defaults to the current date if not specified.
          schema:
            type: string
            format: date
            example: '2020-01-31'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analytics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /analytics/cumulative-per-bundle:
    get:
      summary: Get cumulative analytics
      operationId: getCumulativeAnalyticsPerBundle
      security:
        - BearerAuth: [ ]
      tags:
        - Analytics
      parameters:
        - name: from
          in: query
          description:
            The start date of the custom date range.

            Defaults to 30 days ago if not specified.
          schema:
            type: string
            format: date
            example: '2019-01-01'
        - name: through
          in: query
          description:
            The to (inclusive) date of the custom date range.

            Defaults to the current date if not specified.
          schema:
            type: string
            format: date
            example: '2020-01-31'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CumulativeBundleAnalytics'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /bundles:
    get:
      summary: List bundles
      operationId: listBundles
      security:
        - BearerAuth: []
      tags:
        - Projects
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
        - name: recently_disabled
          in: query
          description:
            When `recently_disabled` is set to true, the response will also include bundles which have been disabled in the last 30 days.
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBundles'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /bundles/{id}:
    get:
      summary: Get a bundle
      operationId: getBundle
      security:
        - BearerAuth: []
      tags:
        - Projects
      parameters:
        - name: id
          in: path
          required: true
          description: The bundle's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /projects:
    get:
      summary: List projects
      operationId: listProjects
      security:
        - BearerAuth: []
      tags:
        - Projects
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
        - name: recently_disabled
          in: query
          description:
            When `recently_disabled` is set to true, the response will also include projects which have been disabled in the last 30 days.
          schema:
            type: boolean
            default: false
            example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProjects'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /projects/{id}:
    get:
      summary: Get a project
      operationId: getProject
      security:
        - BearerAuth: []
      tags:
        - Projects
      parameters:
        - name: id
          in: path
          required: true
          description: The project's unique identifier
          schema:
            type: string
            example: 1vE213P96LbXNap56NAqVoM7knOedQg4
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /projects/by-slug/{slug}:
    get:
      summary: Get a project by slug
      operationId: getProjectBySlug
      security:
        - BearerAuth: []
      tags:
        - Projects
      parameters:
        - name: slug
          in: path
          required: true
          description: The project's unique slug
          schema:
            type: string
            example: 'alto-mayo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-mass:
    post:
      summary: Create an order by mass
      operationId: createOrderByMass
      security:
        - BearerAuth: []
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderByQuantityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderByQuantity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-value:
    post:
      summary: Create an order by value
      operationId: createOrderByValue
      security:
        - BearerAuth: []
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderByValueRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderByValue'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-estimate:
    post:
      summary: Create an order by estimate id
      operationId: createOrderByEstimate
      security:
        - BearerAuth: []
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderByEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderByEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders:
    get:
      summary: List orders
      description:  Returns the account's paginated orders in reverse order (most recent first).
      operationId: listOrders
      security:
        - BearerAuth: []
      tags:
        - Orders
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
        - name: offset_link_id
          in: query
          description: |
            Filter orders by offset_link_id.

            If offset_link_id is set, the response will only include orders belonging to the particular offset link.
          schema:
            type: string
            example: ke56XR3wK72raAe6ZPyEDQzgWldPBO41
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrders'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/{id}:
    get:
      summary: Get an order
      operationId: getOrder
      security:
        - BearerAuth: []
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          description: The order's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/{id}/certificate:
    get:
      summary: Get a carbon offset certificate
      operationId: getOrderCertificate
      security:
        - BearerAuth: []
        - AccessToken: []
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          description: The order's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-idempotency-key/{idempotencyKey}:
    get:
      summary: Get an order by idempotency key
      operationId: getOrderByIdempotencyKey
      security:
        - BearerAuth: []
      tags:
        - Orders
      parameters:
        - name: idempotencyKey
          in: path
          required: true
          description: |
            The order's idempotency key.

            Order idempotency keys must be unique per account.
          schema:
            type: string
            example: 'sg5knd2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-mass/quote:
    post:
      summary: Calculate an order quote by mass
      description: |
        This endpoint does not create an order.

        It processes the order as if it were placed, returning estimated cost and bundles allocations.
      operationId: getOrderQuoteByMass
      security:
        - BearerAuth: []
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderQuoteByQuantityRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderQuoteByQuantity'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /orders/by-value/quote:
    post:
      summary: Calculate an order quote by value
      description: |
        This endpoint does not create an order.

        It processes the order as if it were placed, returning estimated cost and bundles allocations.
      operationId: getOrderQuoteByValue
      security:
        - BearerAuth: []
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderQuoteByValueRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderQuoteByValue'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /bundle-selections:
    get:
      summary: Get an account's bundle selection
      operationId: getBundleSelection
      security:
        - BearerAuth: []
      tags:
        - Bundle selections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleSelection'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      summary: Update an account's bundle selection
      operationId: updateBundleSelection
      security:
        - BearerAuth: []
      tags:
        - Bundle selections
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BundleSelectionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BundleSelection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /bundle-mixes:
    get:
      summary: List all bundle mixes
      operationId: listAllBundleMixes
      security:
        - BearerAuth: []
      tags:
        - Bundle mixes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BundleMix'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /estimates/electricity:
    post:
      summary: Create an electricity emission estimate
      description: Estimate emissions produced by electricity consumption.
      operationId: createElectricityEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectricityEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionEstimateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/electricity/{id}:
    get:
      summary: Get an electricity emission estimate
      operationId: getElectricityEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionEstimateResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFoundWithErrors'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    put:
      summary: Update an electricity emission estimate
      description: Estimate emissions produced by electricity consumption.
      operationId: updateElectricityEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ElectricityEstimateRequest'
      responses:
        '200':
          description: |
            Estimation updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionEstimateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/flight:
    post:
      summary: Create a flight emission estimate
      description: Estimate emissions produced by passengers in a commercial airflight.
      operationId: createFlightEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlightEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionEstimateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'

  /estimates/shipping:
    post:
      summary: Create a shipping emission estimate
      operationId: createShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleShippingEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/shipping/{id}:
    get:
      summary: Get a shipping emission estimate
      operationId: getShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleShippingEmissionEstimate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFoundWithErrors'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    put:
      summary: Update a shipping emission estimate
      operationId: updateShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleShippingEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/shipping/multi-leg:
    post:
      summary: Create a multi-leg shipping emission estimate
      description: Each leg can be fulfilled by a different method, eg a truck, a plane or other options.
      operationId: createMultiLegShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiLegShippingEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiLegShippingEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/shipping/multi-leg/{id}:
    get:
      summary: Get a multi-leg shipping emission estimate
      operationId: getMultiLegShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiLegShippingEmissionEstimate'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFoundWithErrors'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
    put:
      summary: Update a multi-leg shipping emission estimate
      operationId: updateMultiLegShippingEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      parameters:
        - name: id
          in: path
          required: true
          description: The estimate's unique identifier
          schema:
            type: string
            example: Vxg3b7MoBkrNQA328Rgpnvmw1J8a6Lqj
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiLegShippingEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiLegShippingEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/transactions:
    post:
      summary: Create a transaction emission estimate
      operationId: createTransactionEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionEstimateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/company:
    post:
      summary: Create a company emission estimate
      description: |
        Estimate emissions produced by a company. This includes office-related emissions,
        employee transportation, food, drinks, electronic equipment and computing/networking
        operations.

        The result is an estimate of a year-worth of company emissions.
      operationId: createCompanyEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyEmissionEstimate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /estimates/individual:
    post:
      summary: Create an individual's emission estimate
      description: |
        Estimate emissions produced by an individual for a year. This includes travel emissions, food, drinks, energy and shopping activities.

        The result is an estimate of a year-worth of emissions.
      operationId: createIndividualEstimate
      security:
        - BearerAuth: []
      tags:
        - Emission estimates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualEstimateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmissionEstimateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
  /offset-links/{id}:
    get:
      tags:
        - Offset links
      summary: Get an offset link
      operationId: getOffsetLink
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The offset links's unique identifier
          schema:
            type: string
            example: 1vE213P96LbXNap56NAqVoM7knOedQg5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffsetLink'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      tags:
        - Offset links
      summary: Update an offset link
      operationId: updateOffsetLink
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The offset links's unique identifier
          schema:
            type: string
            example: 1vE213P96LbXNap56NAqVoM7knOedQg5
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OffsetLinkUpdateRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffsetLink'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /offset-links:
    get:
      tags:
        - Offset links
      summary: List offset links
      operationId: listOffsetLinks
      security:
        - BearerAuth: []
      parameters:
        - $ref: "#/components/parameters/LimitPagination"
        - $ref: "#/components/parameters/AfterPagination"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOffsetLinks'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      tags:
        - Offset links
      summary: Create an offset link
      operationId: createOffsetLink
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OffsetLinkRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffsetLink'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /offset-links/{id}/analytics:
    get:
      tags:
        - Offset links
      summary: Get offset link's analytics
      operationId: getOffsetLinkAnalytics
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The offset links's unique identifier
          schema:
            type: string
            example: 1vE213P96LbXNap56NAqVoM7knOedQg5
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OffsetLinkAnalytics'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /webhooks:
    get:
      tags:
        - Webhooks
      summary: List all webhooks
      operationId: listAllWebhooks
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      tags:
        - Webhooks
      summary: Create a webhook
      operationId: createWebhook
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /webhooks/{id}:
    get:
      tags:
        - Webhooks
      summary: Get a webhook
      operationId: getWebhook
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The webhooks's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      tags:
        - Webhooks
      summary: Update a webhook
      operationId: updateWebhook
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The webhooks's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWebhookRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    delete:
      tags:
        - Webhooks
      summary: Delete a webhook
      operationId: deleteWebhook
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The webhooks's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /webhooks/{id}/rotate-secret:
    put:
      tags:
        - Webhooks
      summary: Rotate a webhook secret
      description: |
        The existing secret will be invalidated immediately and subsequent webhook payloads will be
        accompanied by HMACs using the new secret.
      operationId: rotateWebhookSecret
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: The webhooks's unique identifier
          schema:
            type: string
            example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /WebhookRequest:
    post:
      tags:
        - Webhook Request
      summary: Webhook request
      operationId: webhookRequest
      description: |
        The endpoint describes the request that you will receive in your webhook receiver and the responses the Lune webhook infrastructure expects.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRequest'
      responses:
        '200':
          description: The events have been successfully handled. Any status code of the `2xx` format has the same behaviour. Any header or body are ignored by Lune.

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      description: Authorization Bearer API Key (see <a href="#section/Authentication">Authentication</a>)
    AccessToken:
      type: apiKey
      in: query
      name: access_token
      description: |
        An API key used to access a resource that accepts it in the URL.

        Note: Lune API keys are not URL-safe, which means that they can't be included in URLs directly.
        They need to be percent-encoded using a function like JavaScript's [`encodeURIComponent()`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent) or
        Python's [`urllib.parse.quote()`](https://docs.python.org/3/library/urllib.parse.html#urllib.parse.quote).
  parameters:
    LimitPagination:
      name: limit
      in: query
      required: false
      description: |
        Maximum number of resources to return, between 1 and 100.
      schema:
        type: string
        pattern: '^\d+$'
        default: '10'
        example: '50'
    AfterPagination:
      name: after
      in: query
      required: false
      description: |
        A cursor for use in pagination.

        *after* is an object ID that defines your place in the list.

        For instance, if you make a list request and receive 100 objects, ending with *foo*, your subsequent call can include *after=foo* in order to fetch the next page of the list.
      schema:
        type: string
        example: 0vE213P96LbXNap56NAqVoM7knOedQg4
  responses:
    NotFound:
      description: The specified resource was not found
    NotFoundWithErrors:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    BadRequest:
      description: The request is invalid. Parameters may be missing or are invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    Unauthorized:
      description: The API Key is missing or is invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    TooManyRequests:
      description: Too many requests have been made in a short period of time
    Forbidden:
      description: The API Key is not authorized to perform the operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    Conflict:
      description: The request could not be completed due to a conflict with the current state of the target resource or resources
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    UnsupportedMediaType:
      description: The payload format is in an unsupported format.
    ServiceUnavailable:
      description: The service is temporarily unavailable. You may retry.
  schemas:
    ElectricityConsumption:
      type: object
      required:
        - amount
        - unit
      properties:
        amount:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '40.501'
        unit:
          type: string
          enum:
            - kWh
            - MWh
            - GWh
          example: 'MWh'
          description: Unit, `kWh` for kilowatt-hours, `MWh` for megawatt-hours, `GWh` for gigawatt-hours
    Mass:
      type: object
      required:
        - amount
        - unit
      properties:
        amount:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '40.501'
        unit:
          $ref: '#/components/schemas/MassUnit'
    MassUnit:
      type: string
      description: Unit, `t` for tonne, `kg` for kilogram, `g` for gram
      enum:
        - g
        - kg
        - t
      example: 't'
    Distance:
      type: object
      required:
        - amount
        - unit
      properties:
        amount:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '40.501'
        unit:
          type: string
          enum:
            - km
            - mi
          example: 'km'
          description: Unit, `km` for kilometers, `mi` for miles
    Area:
      type: object
      required:
        - amount
        - unit
      properties:
        amount:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '40.501'
        unit:
          type: string
          enum:
            - square_meters
            - square_feet
          example: 'square_meters'
    Errors:
      description: An error container
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          description: An array containing errors
          items:
            $ref: '#/components/schemas/Error'
    Error:
      type: object
      description: Individual error information
      required:
        - error_code
        - message
      properties:
        error_code:
          type: string
          description: Immutable string representing a specific error.
          example: account_suspended
          enum:
            - account_suspended
            - invalid_selected_account_id
            - bundle_selection_ratios_invalid
            - bundle_selection_bundle_invalid
            - order_idempotency_already_exists
            - order_quantity_invalid
            - bundle_id_invalid
            - id_invalid
            - test_account_name_update_disallowed
            - validation_error
            - bundle_selection_ratios_invalid_format
            - address_not_found
            - offset_link_constraint_required
            - offset_link_bundles_size_invalid
            - webhook_limit_reached
            - time_range_invalid
            - exchange_rate_not_found
            - live_account_required
            - unauthorised
            - estimate_not_found
            - estimate_order_already_placed
        message:
          type: string
          description: |
              Human readable error message.

              This value can contain some extra information about the error in
              human-readable form. Not suitable for programmatic consumption, the format
              is not guaranteed to be stable.
    OffsetValueSeriesItem:
      type: object
      required:
        - date
        - value
      properties:
        date:
          type: string
          format: date
          example: "2021-09-09"
        value:
          type: string
          example: '333.66'
          pattern: '^[0-9]+(\.[0-9]+)?$'
    OffsetQuantitySeriesItem:
      type: object
      required:
        - date
        - quantity
      properties:
        date:
            type: string
            format: date
            example: "2021-09-09"
        quantity:
          type: string
          example: '222.667'
          pattern: '^[0-9]+(\.[0-9]+)?$'
    OrderQuoteByQuantityRequest:
      type: object
      description: Order by Quantity details
      required:
        - mass
      properties:
        mass:
          description: Mass of CO2 offsets to purchase
          allOf:
            - $ref: '#/components/schemas/Mass'
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
    CreateOrderByQuantityRequest:
      type: object
      description: Order by Quantity details
      required:
        - mass
      properties:
        mass:
          description: Mass of CO2 offsets to purchase
          allOf:
            - $ref: '#/components/schemas/Mass'
        idempotency_key:
          type: string
          maxLength: 100
          example: 5bd808a954e
          description: |
            Account-unique identifier provided by the client.

            `idempotency_key` has two purposes:
            1. Clients can safely retry order requests without accidentally performing the same operation twice. The current state of the original order is returned.
            2. Clients can use `idempotency_key` to reconcile orders with other entities on their system.
        bundle_selection:
          description: |
            Bundle selection to be used for the order.
            For the order, this property overrides the account's bundle selection.
          $ref: '#/components/schemas/BundleSelectionRequest'
        metadata:
          $ref: '#/components/schemas/Metadata'
        quantity_trunc:
          description: Selects to which precision to truncate the quantities assigned to each bundle.
          example: 't'
          $ref: '#/components/schemas/MassUnit'
    OrderQuoteByValueRequest:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7700.00'
          description: Maximum price of CO2 offsets to purchase (in the account's currency)
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          description: Selects to which precision to truncate the quantities assigned to each bundle.
          example: 't'
          $ref: '#/components/schemas/MassUnit'
    CreateOrderByValueRequest:
      type: object
      required:
        - value
      properties:
        value:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7700.00'
          description: Maximum price of CO2 offsets to purchase (in the account's currency)
        idempotency_key:
          type: string
          maxLength: 100
          example: 5bd808a954e
          description: |
            Account-unique identifier provided by the client.

            `idempotency_key` has two purposes:
            1. Clients can safely retry order requests without accidentally performing the same operation twice. The current state of the original order is returned.
            2. Clients can use `idempotency_key` to reconcile orders with other entities on their system.
        bundle_selection:
          description: |
            Bundle selection to be used for the order.
            For the order, this property overrides the account's bundle selection.
          $ref: '#/components/schemas/BundleSelectionRequest'
        metadata:
          $ref: '#/components/schemas/Metadata'
        quantity_trunc:
          description: Selects to which precision to truncate the quantities assigned to each bundle.
          example: 't'
          $ref: '#/components/schemas/MassUnit'
    CreateOrderByEstimateRequest:
      type: object
      required:
        - estimate_id
      properties:
        estimate_id:
          type: string
          description: The emission calculation unique identifier
          example: '90ng23MKvLqbkpMwMw7yMBD4wJQrV6O6'
        idempotency_key:
          type: string
          maxLength: 100
          example: 5bd808a954e
          description: |
            Account-unique identifier provided by the client.

            `idempotency_key` has two purposes:
            1. Clients can safely retry order requests without accidentally performing the same operation twice. The current state of the original order is returned.
            2. Clients can use `idempotency_key` to reconcile orders with other entities on their system.
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        metadata:
          $ref: '#/components/schemas/Metadata'
        quantity_trunc:
          description: Selects to which precision to truncate the quantities assigned to each bundle.
          example: 't'
          $ref: '#/components/schemas/MassUnit'
    BundleSelectionRequest:
      type: array
      description: |
        Bundle selection percentages.

        The sum of all percentages must equal 100.

        If not specified, the preconfigured allocation ratios are going to be used.

        If, for each selection, `percentage` is not provided, the selection is divided equally (best effort) between bundles. `percentage` must be provided for all or none of the bundles.
      items:
        $ref: '#/components/schemas/BundlePercentageRequest'
      example:
        - bundle_id: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
          percentage: 34
        - bundle_id: 'VndoQ0PZjGMzvYOZGwqy6kbgN1eOJx9B'
          percentage: 66
    BundlePercentageRequest:
      type: object
      description: Maps a bundle id to an allocation ratio
      required:
        - bundle_id
      properties:
        bundle_id:
          type: string
          example: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
          description: The bundle's unique identifier
        percentage:
          type: integer
          example: 43
          description: Selection percentage
    BundleSelection:
      type: array
      description: |
        Allocation ratios by bundle.

        The sum of all allocation ratios must equal 100.

        If not specified, the preconfigured allocation ratios are going to be used.
      items:
        $ref: '#/components/schemas/BundlePercentage'
      example:
        - bundle_id: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
          percentage: 34
        - bundle_id: 'VndoQ0PZjGMzvYOZGwqy6kbgN1eOJx9B'
          percentage: 66
    BundlePercentage:
      type: object
      description: Maps a bundle's unique identifier to an allocation ratio
      required:
        - bundle_id
        - percentage
      properties:
        bundle_id:
          type: string
          example: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
          description: The bundle's unique identifier
        percentage:
          type: integer
          example: 43
          description: Selection percentage
    BundleMix:
      type: object
      description: |
        Predefined bundle selections, for example following Oxford Offsetting Principles.
        Bundle selection for a particular Bundle mix may change over time.
      required:
        - id
        - identifier
        - label
        - bundle_selection
      properties:
        id:
          type: string
          description: Bundle mix unique identifier.
          example: 'A7hPO9C01RnzPkYxJgAHxq112roXlWO5'
        identifier:
          type: string
          description: Identifier of the bundle mix.
          example: 'oxford-offsetting-principles'
        label:
          type: string
          description: Human readable name of the bundle mix.
          example: 'Oxford Offseting Principles'
        bundle_selection:
          $ref: '#/components/schemas/BundleSelection'
    OrderBase:
      type: object
      description: Order object
      required:
        - id
        - type
        - status
        - currency
        - created_at
        - metadata
      properties:
        id:
          type: string
          description: The order's unique identifier
          example: va1BER4JZqnzPkYxJgALg0GeQDoXlWO5
        idempotency_key:
          type: string
          maxLength: 100
          example: 5bd808a954e
          description: |
            Account-unique identifier provided by the client.

            `idempotency_key` has two purposes:
            1. Clients can safely retry order requests without accidentally performing the same operation twice. The current state of the original order is returned.
            2. Clients can use `idempotency_key` to reconcile orders with other entities on their system.
        type:
          type: string
          description: Identifies whether the order has been placed by quantity (kg CO2) or value (monetary amount)
          example: quantity
          enum:
            - quantity
            - value
        status:
          type: string
          description: Order status
          example: complete
          enum:
            - received
            - placed
            - paid
            - retiring
            - cancelled
            - complete
            - failed
        currency:
          type: string
          description: Order currency code
          example: 'GBP'
        offset_cost:
          type: string
          description: |
            The net offset cost being purchased. May be lower than `requested_value`.

            This property is set when bundles are assigned to the order.
            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7176.00'
        total_cost:
          type: string
          description: |
            The total cost for the order inclusive of fees.

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7696.00'
        commission:
          type: string
          description: |
            Lune's fee.

            This property is set when bundles are assigned to the order.
            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '520.00'
        quantity:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1040'
          description: Quantity of CO2 offsets purchased in tonnes.
        created_at:
          type: string
          format: date-time
          description: Order creation timestamp
        bundles:
          type: array
          description: |
            bundles are set when the order's status is `placed`, `paid`, `retiring` or `complete`.

            The bundles associated with the order including their relative quantity and cost breakdown.
          items:
            $ref: '#/components/schemas/OrderBundle'
        projects:
          type: array
          description: |
            Projects are set when the order's status is `retiring` or `complete`.

            The projects associated with the order including their relative quantity and cost breakdown.

            Orders are placed against bundles, not projects. Projects in a bundle may change based on supply.

            This property is set as soon as we can guarantee project supply.

          items:
            $ref: '#/components/schemas/OrderProject'
          example:
            - quantity: '600'
              unit_price: '6.90'
              offset_cost: '4140.00'
              project_id: 'gMbvJoOaX54V1wpNaRY8dWDGQ7m239Bx'
              project_name: 'Madre De Dios'
              project_type: 'Forest Conservation'
              project_slug: 'madre-de-dios'
            - quantity: '440'
              unit_price: '6.90'
              offset_cost: '3036.00'
              project_id: 'xe1BEV2VZqnzPkYxJgALg0GeQDoXlWO5'
              project_name: 'Alto Mayo'
              project_type: 'Forest Conservation'
              project_slug: 'alto-mayo'
        certificate:
          type: string
          description: |
            Carbon credits certificate URL.

            This property is set when an order has state 'complete'

          example: 'https://api.lune.co/v1/orders/08QD7GPaBx5b6Y60ndAONXLvrZljRE2e/certificate'
        metadata:
          $ref: '#/components/schemas/Metadata'
        offset_link_id:
          type: string
          description: The offset link identifier, if the order was placed through an offset link
          example: 'UwjfkXjfksoHXzA1qjANL58GhjwqkxpB'
        email:
          type: string
          description: |
            End-user email.

            This property is currently populated on orders placed through offset links.
          example: 'john@doe.com'
    OrderByQuantity:
      title: Order by quantity
      allOf:
        - $ref: '#/components/schemas/OrderBase'
        - type: object
          required:
            - requested_quantity
          properties:
            requested_quantity:
              type: string
              pattern: '^[0-9]+(\.[0-9]+)?$'
              example: '1045'
              description: Requested quantity of CO2 offsets to purchase in tonnes.
    OrderByValue:
      title: Order by value
      allOf:
        - $ref: '#/components/schemas/OrderBase'
        - type: object
          required:
            - requested_value
          properties:
            requested_value:
              description: Requested value of CO2 offsets to purchase in the account's currency.
              type: string
              pattern: '^[0-9]+(\.[0-9]+)?$'
              example: '7700'
    OrderByEstimate:
      title: Order by emission estimate
      allOf:
        - $ref: '#/components/schemas/OrderBase'
        - type: object
          required:
            - estimate_id
          properties:
            estimate_id:
              type: string
              description: The emission calculation unique identifier
              example: '90ng23MKvLqbkpMwMw7yMBD4wJQrV6O6'
    Order:
      type: object
      oneOf:
          - $ref: '#/components/schemas/OrderByQuantity'
          - $ref: '#/components/schemas/OrderByValue'
      discriminator:
        propertyName: type
        mapping:
          quantity: '#/components/schemas/OrderByQuantity'
          value: '#/components/schemas/OrderByValue'
    OrderProject:
      type: object
      required:
        - project_id
        - project_name
        - project_type
        - project_slug
        - quantity
        - unit_price
        - offset_cost
      properties:
        project_id:
          type: string
          description: The project's unique identifier
          example: xe1BEV2VZqnzPkYxJgALg0GeQDoXlWO5
        project_name:
          type: string
          description: The project's name
          example: 'Alto Mayo'
        project_type:
          type: string
          description: The project's offset type, eg Forest conservation, Afforestation, Direct Air Capture
          example: 'Forest conservation'
        project_slug:
          type: string
          description: The project's unique slug
          example: 'alto-mayo'
        quantity:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1040'
          description: Carbon offset purchased (tonnes CO2)
        unit_price:
          type: string
          description: |
            Project unit price per tonne CO2

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '6.09'
        offset_cost:
          type: string
          description: |
            The net offset cost being purchased.

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7176.00'
    OrderBundle:
      type: object
      required:
        - bundle_id
        - bundle_name
        - quantity
        - unit_price
        - gross_unit_price
        - offset_cost
      properties:
        bundle_id:
          type: string
          description: The bundle's unique identifier
          example: va1BEV2VZqnzPkYxJgALg0GeQDoXlWO5
        bundle_name:
          type: string
          description: The bundle's name
          example: 'Latin America Forestry'
        quantity:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1040'
          description: Quantity for the specific bundle (tonnes CO2)
        unit_price:
          type: string
          description: |
            Bundle unit price per tonne CO2

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '6.90'
        gross_unit_price:
          type: string
          description: |
            Bundle unit price per tonne CO2 inclusive of fees.

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7.90'
        offset_cost:
          type: string
          description: |
            The bundle's net offset cost being purchased.

            Unit: order currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7176.00'
        insufficient_available_quantity:
          type: boolean
          description: |
            If true, there is no inventory necessary to fully satisfy the order for this bundle.

          example: true
    PaginatedBase:
      type: object
      required:
        - has_more
      properties:
        has_more:
          type: boolean
          description: Whether or not there are more elements available after this set. If false, this set comprises the end of the array.
    PaginatedOrders:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              description: Paginated Order objects ordered by creation date descending.
              items:
                $ref: '#/components/schemas/Order'
    OrderQuoteBase:
      type: object
      required:
        - currency
        - estimated_quantity
        - estimated_commission
        - estimated_offset_cost
        - estimated_total_cost
        - bundles
      properties:
        currency:
          type: string
          example: 'GBP'
          description: Currency code
        estimated_quantity:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1040'
          description: |
            Estimated quantity (tonnes CO2).

            May be lower than `requested_quantity`.
        estimated_offset_cost:
          type: string
          description: |
            Estimated offset cost

            Unit: order quote currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7176.00'
        estimated_total_cost:
          type: string
          description: |
            Estimated total cost inclusive of Lune fees.

            Unit: order quote currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7696.00'
        estimated_commission:
          type: string
          description: Estimated commission
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '520.00'
        bundles:
          type: array
          description: |
            Bundles included in the quote including quantity and cost breakdown.
          items:
            $ref: '#/components/schemas/OrderBundle'
    OrderQuoteByQuantity:
      allOf:
        - $ref: '#/components/schemas/OrderQuoteBase'
        - type: object
          required:
            - requested_quantity
          properties:
            requested_quantity:
              type: string
              pattern: '^[0-9]+(\.[0-9]+)?$'
              example: '1045'
              description: |
                Requested quantity for the specific bundle (tonnes CO2).

                requested_quantity may be returned as part of an emission estimate response, in which case this property contains the equivalent value as the `mass` property.
    OrderQuoteByValue:
      allOf:
        - $ref: '#/components/schemas/OrderQuoteBase'
        - type: object
          required:
            - requested_value
          properties:
            requested_value:
              description: Requested order value inclusive of commission
              type: string
              pattern: '^[0-9]+(\.[0-9]+)?$'
              example: '7700'
    PaginatedBundles:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Bundle'
    BundleSummary:
      type: object
      required:
        - id
        - name
        - unit_price
        - gross_unit_price
        - currency
        - disabled
      properties:
        id:
          type: string
          example: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
          description: The bundle's unique identifier
        name:
          type: string
          description: The bundle's name
          example: 'Latin America Forestry'
        unit_price:
          type: string
          description: |
            Bundle unit price per tonne CO2
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '6.09'
        gross_unit_price:
          type: string
          description: |
            Bundle unit price per tonne CO2 inclusive of fees
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '7.09'
        currency:
          type: string
          example: 'GBP'
          description: Currency code
        background_colour:
          type: string
          description: A bundle's background colour in hexadecimal format
          example: '#AABBCC'
        primary_image:
          type: string
          description: A bundle's image URL
          example: 'https://assets.lune.co/bundles/latin-america-forestry.png'
        primary_image_hires:
          type: string
          description: A bundle's high resolution image URL
          example: 'https://assets.lune.co/bundles/latin-america-hires.jpg'
        small_thumbnail:
          type: string
          description: A bundle's small thumbnail image URL
          example: 'https://assets.lune.co/bundles/latin-america-thumbnail.jpg'
        description:
          type: string
          description: The bundle's description
          example: 'A conglomeration of renewable energy projects around the world'
        disabled:
          type: boolean
          example: false
          description: |
            Disabled bundles do not accept orders
        available_quantity:
          type: string
          description: |
            Quantity of CO2 offsets available to purchase (in tonnes).

            If available_quantity is not set, assume there is an unlimited amount of offsets to purchase.
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '1000.09'
        offset_type:
          type: string
          description: |
            Offset type classification
          enum:
            - emissions_reduction
            - carbon_removal
          example: 'emissions_reduction'
        carbon_permanence:
          type: string
          description: The bundle's carbon storage permanence.
          enum:
            - long_term
            - short_term
          example: 'long_term'
    Bundle:
      description: |
        Group of projects of similar price and characteristics.

        Orders are placed against bundles.
      allOf:
        - $ref: '#/components/schemas/BundleSummary'
        - type: object
          required:
            - projects
          properties:
            projects:
              type: array
              description: Array of projects that belong to the bundle
              items:
                $ref: '#/components/schemas/ProjectSummary'
    PaginatedProjects:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Project'
    Media:
      type: object
      required:
        - type
        - url
      properties:
        type:
          type: string
          enum: 
            - image
            - video
          example: 'image'
          description: The type of the media item
        url:
          type: string
          example: https://assets.lune.co/bundles/biochar.png
          description: The URL of the media item
    ProjectSummary:
      type: object
      required:
        - id
        - name
        - short_name
        - slug
        - description
        - project_type
        - registry_name
        - latitude
        - longitude
        - country_name
        - country_code
        - disabled
      properties:
        id:
          type: string
          example: 'owda1kVEl60jnPykZeADr57Z8OqbKMXx'
          description: The projects's unique identifier
        name:
          type: string
          description: The project's name
          example: 'Alto Mayo'
        short_name:
          type: string
          description: The project's short name. May coincide with name.
          example: 'Alto Mayo'
        slug:
          type: string
          description: Project slug
          example: 'alto-mayo'
        description:
          description: Project description
          type: string
        project_type:
          type: string
          description: The project's offset type, eg Forest conservation, Afforestation, Direct Air Capture
          example: 'Forest conservation'
        registry_name:
          type: string
          description: The project's Verification Standard Entity name or equivalent organization.
          example: 'Verified Carbon Standard'
        registry_link:
          type: string
          description: A link to the registry's project details page.
          example: 'https://registry.verra.org/app/projectDetail/VCS/1566'
        latitude:
          type: number
          format: float
          description: Latitude
          example: '-5.87798'
        longitude:
          type: number
          format: float
          description: Logitude
          example: '-77.612352'
        country_name:
          type: string
          description: The project's country
          example: 'Peru'
        country_code:
          type: string
          description: The project's 3 character country code
        region:
          type: string
          description: The project's region
          example: 'Huancavelica'
        logo:
          type: string
          description: A project logo image URL
          example: 'https://assets.lune.co/projects/Alto+Mayo+1+logo.png'
        primary_image:
          type: string
          description: A project image URL
          example: 'https://assets.lune.co/projects/Alto+Mayo+1.png'
        thumbnail_image:
          type: string
          description: A project thumbnail image URL
          example: 'https://assets.lune.co/projects/Alto+Mayo+1_thumbnail.png'
        results:
          description: Project results
          type: array
          items:
            type: string
          example: ['Reduced deforestation of 75% from baseline levels, the first time a project in Peru reaches such high results', 'Co-benefits include: poverty reduction across local communities, education around sustainable farming, conservation of biodiversity']
        un_sdg:
          description: |
            UN Sustainable Development Goals.

            Each number in the array represent one UN Sustainable Development Goal. See https://sdgs.un.org/goals.
          type: array
          items:
            type: number
          example: [1, 4, 8, 13, 15]
        disabled:
          type: boolean
          example: false
          description: |
            Disabled projects do not get allocated to orders
        media: 
          type: array
          items: 
            $ref: '#/components/schemas/Media'
          description: A list of images and videos belonging to the project.
    Project:
      allOf:
        - $ref: '#/components/schemas/ProjectSummary'
        - type: object
          required:
            - bundles
          properties:
            bundles:
              type: array
              description: Array of bundles the project is part of
              items:
                $ref: '#/components/schemas/BundleSummary'
    AccountScope:
      type: string
      description: |
          The account's scope.

          Determines if the resource is a regular account or a client account.
      enum:
        - account
        - client_account
      example: 'account'
    AccountType:
      type: string
      description: |
          The account's type.

          See the <a href="#section/Live-and-test-accounts">Live and test accounts section</a> for details.
      enum:
        - live
        - test
      example: 'live'
    AccountBase:
      type: object
      required:
        - id
        - name
        - organisation_id
        - currency
        - balance
        - balance_outstanding
        - type
      properties:
        id:
          type: string
          example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
          description: The Account's unique identifier
        name:
          type: string
          description: The Account's name
          example: 'Acme Corporation'
        organisation_id:
          type: string
          description: The unique identifier of the organisation this account belongs to
          example: 'VndoQ0PZjGMzvYOZGwqy6kbgN1eOJx9B'
        currency:
          type: string
          description: The Account's currency
          example: 'GBP'
        balance:
          type: string
          description: |
            Account's cash balance.

            Unit: Account currency
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '23.50'
        balance_outstanding:
          type: string
          description: |
            The Account's outstanding balance. It is the sum of placed and unpaid orders.

            The outstanding balance is mostly negative.

            Unit: Account currency
          pattern: '^-?[0-9]+(\.[0-9]+)?$'
          example: '-132.50'
        type:
          $ref: '#/components/schemas/AccountType'
        logo:
          type: string
          description: |
            Offset link logo URL

            This is the logo URL that appears on the first screen of the offset links flow.
        beneficiary:
          type: string
          description: |
            Retirement beneficiary

            This is the name that appears on future retirements that are made in this account.
            If none is present, the organisation beneficiary will be used instead.
          minLength: 1
        bundle_mix_id:
          type: string
          description: Bundle mix id tied to the account.
          example: 'Jvhh30a6272NauKv92J7FG1c6Jfxd2E1'
    CumulativeBundleAnalytics:
      type: array
      items:
        $ref: '#/components/schemas/AnalyticsByBundle'
    AnalyticsByBundle:
      type: object
      required:
        - bundle_id
        - bundle_name
        - timeseries
      properties:
        bundle_id:
          type: string
          description: The bundle's unique identifier
          example: va1BEV2VZqnzPkYxJgALg0GeQDoXlWO5
        bundle_name:
          type: string
          description: The bundle's name
          example: 'Latin America Forestry'
        timeseries:
          $ref: '#/components/schemas/QuantityAndValueTimeseries'
    QuantityAndValueTimeseries:
      type: array
      items:
        type: object
        required:
          - date
          - quantity
          - value
        properties:
          date:
              type: string
              format: date
              example: "2021-09-09"
          value:
            type: string
            example: '222.667'
            pattern: '^[0-9]+(\.[0-9]+)?$'
          quantity:
            type: string
            pattern: '^[0-9]+(\.[0-9]+)?$'
            example: '500.50'
            description: Quantity of CO2 offsets linked to this activity (tonnes CO2)
        example:
          - date: '2022-06-25'
            value: '13.20'
            quantity: '503.342'
          - date: '2022-06-26'
            value: '23.20'
            quantity: '1503.342'
          - date: '2022-06-27'
            value: '64.23'
            quantity: '4700.451'
    Analytics:
      type: object
      required:
        - total_completed_offset_value
        - total_completed_offset_quantity
        - total_placed_offset_value
        - total_placed_offset_quantity
        - completed_offset_values
        - completed_offset_quantities
        - placed_offset_values
        - placed_offset_quantities
      properties:
        total_completed_offset_value:
          type: string
          description: The total monetary value of all completed orders for a given interval.
          example: '500.66'
          pattern: '^[0-9]+(\.[0-9]+)?$'
        total_completed_offset_quantity:
          type: string
          description: The total quantity in tCO2 of all completed orders for a given interval.
          example: '500.667'
          pattern: '^[0-9]+(\.[0-9]+)?$'
        total_placed_offset_value:
          type: string
          description: The total monetary value of all placed orders for a given interval.
          example: '333.66'
          pattern: '^[0-9]+(\.[0-9]+)?$'
        total_placed_offset_quantity:
          type: string
          description: The total quantity in tCO2 of all placed orders for a given interval.
          example: '555.222'
          pattern: '^[0-9]+(\.[0-9]+)?$'
        completed_offset_values:
          type: array
          description: An array of offest values grouped by completion date.
          items:
            $ref: '#/components/schemas/OffsetValueSeriesItem'
        completed_offset_quantities:
          type: array
          description: An array of offest quantities grouped by completion date.
          items:
            $ref: '#/components/schemas/OffsetQuantitySeriesItem'
        placed_offset_values:
          type: array
          description: An array of offest values grouped by placed date.
          items:
            $ref: '#/components/schemas/OffsetValueSeriesItem'
        placed_offset_quantities:
          type: array
          description: An array of offest quantities grouped by placed date.
          items:
            $ref: '#/components/schemas/OffsetQuantitySeriesItem'
    PaginatedActivity:
      description: Activity is presented in reverse order (most recent first).
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Activity'
              example:
                - id: 'gh2VDRT4JZqnzPkYxJgALg0GeQDoXlWO3'
                  currency: 'GBP'
                  source: 'order_paid'
                  balance: '25.50'
                  balance_delta: '-3.50'
                  balance_outstanding: '-132.50'
                  balance_outstanding_delta: '3.50'
                  order_id: 'xe1BEV2VZqnzPkYxJgALg0GeQDoXlWO3'
                  created_at: '2019-08-24T14:15:22Z'
                - id: 'q9aKx7b6nNXMk3Yv3NpD1mlW5Od2eLZE'
                  currency: 'GBP'
                  source: 'admin_credit'
                  balance: '29'
                  balance_delta: '29'
                  balance_outstanding: '-136'
                  balance_outstanding_delta: '0'
                  created_at: '2019-08-24T14:15:22Z'
    Activity:
      type: object
      description: Immutable event log entry. Some account events yield an activity object.
      required:
        - id
        - currency
        - source
        - balance
        - balance_delta
        - balance_outstanding
        - balance_outstanding_delta
        - created_at
      properties:
        id:
          type: string
          description: The activity's unique identifier
          example: gh2VDRT4JZqnzPkYxJgALg0GeQDoXlWO3
        currency:
          type: string
          description: |
            Account currency code.

            All activity rows amount are relative to the account's currency.
          example: 'GBP'
        source:
          type: string
          enum:
            - admin_credit
            - admin_debit
            - order_received
            - order_placed
            - order_paid
            - order_retiring
            - order_cancelled
            - order_allocation_retired
            - order_complete
            - order_failed
          description: |
            The source event that has yielded the activity.

            * `admin_credit` The account has been credited by Lune.
            * `admin_debit` The account has been debited by Lune.
            * `order_received` The account has placed an order and Lune has received it.
            * `order_placed` An order has been matched to bundles. Quantites and costs are known and have been set.
            * `order_paid` The order has been paid for.
            * `order_retiring` Lune has started retiring the order's carbon offsets.
            * `order_cancelled` The order has been cancelled
            * `order_allocation_retired` Carbon credits linked to a specific project have been retired
            * `order_complete` All carbon credits linked to the order have been retired
            * `order_failed` Order failed to process.
          example: 'order_complete'
        balance:
          type: string
          description: |
            Account's cash balance at the time of this activity

            Unit: Account currency
          pattern: '^-?[0-9]+(\.[0-9]+)?$'
          example: '23.50'
        balance_delta:
          type: string
          description: |
            Account's cash balance delta.

            The previous balance plus `balance_delta` equals the current balance.

            Unit: Account currency
          pattern: '^-?[0-9]+(\.[0-9]+)?$'
          example: '-3.50'
        balance_outstanding:
          type: string
          description: |
            The Account's outstanding balance at the time of this activity

            Unit: Account currency
          pattern: '^-?[0-9]+(\.[0-9]+)?$'
          example: '-132.50'
        balance_outstanding_delta:
          type: string
          description: |
            Account's outstanding balance delta.

            The previous outstanding balance plus `balance_outstanding_delta` equals the current outstanding balance.

            Unit: Account currency
          pattern: '^-?[0-9]+(\.[0-9]+)?$'
          example: '3.50'
        quantity:
          type: string
          pattern: '^[0-9]+(\.[0-9]+)?$'
          example: '500.50'
          description: Quantity of CO2 offsets linked to this activity (tonnes CO2)
        order_id:
          type: string
          description: The order's unique identifier
          example: xe1BEV2VZqnzPkYxJgALg0GeQDoXlWO3
        project_id:
          type: string
          description: The project's unique identifier
          example: 'BmWxrvXo29eGqzA1qjANL5PwnkgaO8R3'
        project_name:
          type: string
          description: The project's name
          example: 'Alto Mayo'
        created_at:
          type: string
          format: date-time
          description: Activity creation timestamp
    ElectricityEstimateRequest:
      type: object
      description: Parameters for estimating electricity emissions
      required:
        - consumption
      properties:
        consumption:
          $ref: '#/components/schemas/ElectricityConsumption'
        country_code:
          type: string
          description: |
              The three-letter code of the country where the consumption takes place, if applicable.

              Providing this value will improve the estimation process. If the value is not provided
              the global average will be used.
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          description: Selects to which precision to truncate the quantities assigned to each bundle.
          example: 't'
          $ref: '#/components/schemas/MassUnit'
    FlightEstimateRequest:
      type: object
      description: Parameters for estimating emissions for commercial plane travel
      required:
        - route
      properties:
        route:
          description: Either the flying distance or the start/destination airport code (ICAO or IATA).
          oneOf:
            - $ref: '#/components/schemas/Distance'
            - $ref: '#/components/schemas/AirportSourceDestination'
        cabin_class:
          $ref: '#/components/schemas/CabinClass'
        passengers:
          description: Number of passengers the calculation should be applied to.

            This parameter defaults to 1.
          type: number
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          description: Selects to which precision to truncate the quantities assigned to each bundle.
          example: 't'
          $ref: '#/components/schemas/MassUnit'
    CabinClass:
       description: Cabin of class to be used for the specified passengers.

         Higher classes account for more emissions since total weight and volume necessary
         to accomodate the class is higher.

         This parameter defaults to first.
       type: string
       enum:
         - economy
         - business
         - first
       example: 'economy'
    ShippingEstimateRequest:
      type: object
      description: Parameters for estimating shipping emissions
      required:
        - shipment
        - route
        - method
      properties:
        shipment:
          $ref: '#/components/schemas/Shipment'
        route:
          $ref: '#/components/schemas/ShippingRoute'
        method:
          $ref: '#/components/schemas/ShippingMethod'
        country_code:
          $ref: '#/components/schemas/ShippingCountryCode'
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          description: Selects to which precision to truncate the quantities assigned to each bundle.
          example: 't'
          $ref: '#/components/schemas/MassUnit'
    ShippingRoute:
      description: |
        Either the shipping distance or the start/destination address pair.

        Note that for sea transport the source/destination pair should be as close to
        locations of existing and well-known ports as possible. Coordinates or addresses
        that lie far from the shore line or coordinates deep into the sea or ocean will
        result in inaccurate calculations.

        When transporting goods over unusual routes or between unusual points it's better
        to provide us the distance directly to ensure better calculations.
      oneOf:
        - $ref: '#/components/schemas/Distance'
        - $ref: '#/components/schemas/SourceDestination'
    ShippingCountryCode:
      type: string
      description: |
          The three-letter code of the country where the shipping takes place, if applicable.

          Providing this value will improve the estimation process. If the shipping spans
          multiple countries you can either make multiple per-country estimations or choose
          the country with the largest share of the route.
    MultiLegShippingEstimateRequest:
      type: object
      description: Parameters for estimating multi-leg shipping emissions
      required:
        - shipment
        - legs
      properties:
        shipment:
          $ref: '#/components/schemas/Shipment'
        legs:
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: object
            required:
              - route
              - method
            properties:
              route:
                $ref: '#/components/schemas/ShippingRoute'
              method:
                $ref: '#/components/schemas/ShippingMethod'
              country_code:
                $ref: '#/components/schemas/ShippingCountryCode'
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          description: Selects to which precision to truncate the quantities assigned to each bundle.
          example: 't'
          $ref: '#/components/schemas/MassUnit'
    Shipment:
      description: |
        Either a mass given in kilograms or tonnes (`mass`) or the number of [Twenty-foot Equivalent
        Units (TEUs)](https://en.wikipedia.org/wiki/Twenty-foot_equivalent_unit) (with their cargo type,
        optionally). Note that providing `mass` will result in more accurate estimates for methods other
        than `container_ship`. Estimates using `container_ship` are more precise when the shipment is given
        in TEUs.
      oneOf:
        - type: object
          required:
            - mass
          properties:
            mass:
              $ref: '#/components/schemas/Mass'
        - type: object
          required:
            - containers
          properties:
            containers:
              type: string
              pattern: '^[0-9]+(\.[0-9]+)?$'
              example: '40.501'
            cargo_type:
              type: string
              enum:
                - lightweight
                - average
                - heavyweight
                - container_only
    ShippingMethod:
      oneOf:
        - $ref: '#/components/schemas/SimpleShippingMethod'
        - $ref: '#/components/schemas/SeaShippingMethod'
        - $ref: '#/components/schemas/ContainerShippingMethod'
        - $ref: '#/components/schemas/IdentifiedVesselShippingMethod'
    SimpleShippingMethod:
      type: string
      description: |
        Vessel sizes:
        * `inland_waterway_motor_vessel_*`:

          * `small` – less than 80 m / 1000 t
          * `medium` – 85-110 m (1000-2000 t)
          * `large` – 135 m (2000-3000 t)

        * `inland_waterway_coupled_convoy` – 163-185 m
        * `inland_waterway_pushed_convoy_*`:

          * `small` – 2 barges
          * `medium` – 4-5 barges
          * `large` – 6 barges

        * `inland_waterway_container_vessel_medium` – 110 m
        * `inland_waterway_container_vessel_large` – 135 m

      enum:
        - inland_waterway_motor_vessel_small
        - inland_waterway_motor_vessel_medium
        - inland_waterway_motor_vessel_large
        - inland_waterway_coupled_convoy
        - inland_waterway_pushed_convoy_small
        - inland_waterway_pushed_convoy_medium
        - inland_waterway_pushed_convoy_large
        - inland_waterway_tanker
        - inland_waterway_container_vessel_medium
        - inland_waterway_container_vessel_large
        - inland_waterway_container_vessel_convoy

        - diesel_freight_train
        - electric_freight_train

        - diesel_truck

        - plane
        - passenger_plane
        - cargo_plane
    SeaShippingMethod:
      oneOf:
        - $ref: '#/components/schemas/VariableFuelSeaShippingMethod'
        - $ref: '#/components/schemas/VariableFuelVariableLoadSeaShippingMethod'
        - $ref: '#/components/schemas/RoRoSeaShippingMethod'
        - $ref: '#/components/schemas/HugeOilTankerSeaShippingMethod'
    VariableFuelSeaShippingMethod:
      type: object
      required:
        - vessel_type
      properties:
        vessel_type:
          type: string
          enum:
            - sea_oil_tanker_small
            - sea_oil_tanker_medium
            - sea_oil_tanker_large
            - sea_general_cargo_small
            - sea_general_cargo_large
            - sea_bulk_carrier_small
            - sea_ropax
        fuel:
          type: string
          enum:
            - HFO
            - MGO
    VariableFuelVariableLoadSeaShippingMethod:
      type: object
      required:
        - vessel_type
      properties:
        vessel_type:
          type: string
          enum:
            - sea_bulk_carrier_medium
            - sea_bulk_carrier_large
        fuel:
          type: string
          enum:
            - HFO
            - MGO
        load:
          type: string
          enum:
            - average
            - heavy
    RoRoSeaShippingMethod:
      type: object
      required:
        - vessel_type
      properties:
        vessel_type:
          type: string
          enum:
            - sea_roro
        fuel:
          type: string
          enum:
            - HFO
            - MGO
        load:
          type: string
          enum:
            - freight_only
            - truck_and_trailer
            - trailer_only
    HugeOilTankerSeaShippingMethod:
      type: object
      required:
        - vessel_type
      properties:
        vessel_type:
          type: string
          enum:
            - sea_oil_tanker_huge
        fuel:
          type: string
          enum:
            - HFO
            - MGO
            - LNG
    ContainerShippingMethod:
      type: object
      required:
        - vessel_type
      properties:
        vessel_type:
          type: string
          enum:
            - container_ship
        refrigerated:
          description: |
            A container transport is either refrigerated or "dry" (not refrigerated). Dry transports
            result in lower emissions.

            This parameter defaults to `false`.
          type: boolean
        trade_lane:
          type: string
          description: |
            Container transport emissions vary per trade lane. When a trade lane is not given we'll
            use an industry-wide average. Providing an `aggregated_*` trade lane group will result in an
            a more accurate estimate. Providing an `disaggregated_*` trade lane will result in the best
            estimate precision.

            The identifiers are kept relatively short for brevity: Mediterranean includes Black Sea and
            South America includes Central America.

            The trade lanes are bidirectional, for example `disaggregated_asia_to_africa` covers both
            Asia to Africa and Africa to Asia.
          enum:
            - aggregated_panama_trade
            - aggregated_transatlantic
            - aggregated_transsuez
            - aggregated_transpacific
            - aggregated_other

            - disaggregated_asia_to_africa
            - disaggregated_asia_to_mediterranean
            - disaggregated_asia_to_middle_east
            - disaggregated_asia_to_north_america_east
            - disaggregated_asia_to_north_america_west
            - disaggregated_asia_to_north_europe
            - disaggregated_asia_to_oceania
            - disaggregated_asia_to_south_america
            - disaggregated_europe_to_africa
            - disaggregated_europe_to_south_america
            - disaggregated_europe_to_middle_east
            - disaggregated_europe_to_oceania
            - disaggregated_mediterranean_to_north_america_east
            - disaggregated_mediterranean_to_north_america_west
            - disaggregated_north_america_to_africa
            - disaggregated_north_america_to_oceania
            - disaggregated_north_america_to_south_america
            - disaggregated_north_america_to_middle_east
            - disaggregated_north_europe_to_north_america_east
            - disaggregated_north_europe_to_north_america_west
            - disaggregated_south_america_to_africa
            - disaggregated_intra_africa
            - disaggregated_intra_north_america
            - disaggregated_intra_south_america
            - disaggregated_se_asia_to_ne_asia
            - disaggregated_intra_ne_asia
            - disaggregated_intra_se_asia
            - disaggregated_north_europe_to_mediterranean
            - disaggregated_intra_mediterranean
            - disaggregated_intra_north_europe
            - disaggregated_intra_middle_east
            - disaggregated_other
    IdentifiedVesselShippingMethod:
      type: object
      required:
        - vessel_imo_number
      properties:
        vessel_imo_number:
          description: |
            The ship's [IMO number](https://en.wikipedia.org/wiki/IMO_number) *without* the `IMO` prefix.
          type: string
          pattern: '^[0-9]{7}$'

    AirportSourceDestination:
      type: object
      required:
        - source
        - destination
      properties:
        source:
          $ref: '#/components/schemas/AirportCode'
        destination:
          $ref: '#/components/schemas/AirportCode'
    AirportCode:
      type: object
      oneOf:
          - $ref: '#/components/schemas/IATACode'
          - $ref: '#/components/schemas/ICAOCode'
    IATACode:
      type: object
      required:
          - code
      properties:
        code:
          type: string
          pattern: ^[A-Z]{3}$
          description: Airport IATA code. For a full list of options (https://openflights.org/data.html)
          example: OPO
    ICAOCode:
      type: object
      required:
          - code
      properties:
        code:
          type: string
          pattern: ^[A-Z]{4}[A-Z]?$
          description: Airport ICAO code. For a full list of options (https://openflights.org/data.html)
          example: LPPR

    SourceDestination:
      type: object
      required:
        - source
        - destination
      properties:
        source:
          oneOf:
            - $ref: '#/components/schemas/Address'
            - $ref: '#/components/schemas/GeographicCoordinates'
        destination:
          oneOf:
            - $ref: '#/components/schemas/Address'
            - $ref: '#/components/schemas/GeographicCoordinates'
    Address:
      type: object
      required:
        - street_line1
        - postcode
        - city
        - country_code
      properties:
        street_line1:
          type: string
          description: A street and house number (or equivalent).
          example: "1 Hollow Road"
        street_line2:
          type: string
          description: An address component more precise than a street and house number.
          example: "Apartment 2"
        postcode:
          type: string
          example: "99 210"
          description: The postal code in the format specific to the country it's in
        city:
          type: string
          example: "Ledville"
        country_code:
          type: string
          example: "GBR"
          description: A three-letter country code.
    GeographicCoordinates:
      type: object
      required:
        - lat
        - lon
      properties:
        lat:
          description: Latitude
          type: number
          minimum: -90.0
          maximum: 90.0
        lon:
          description: Longitude
          type: number
          minimum: -180.0
          maximum: 180.0
    TransactionEstimateRequest:
      type: object
      description: Parameters for estimating emissions associated with purchasing goods or services.
      required:
        - value
        - merchant
      properties:
        value:
          description: Monetary value of the transaction. This should exclude shipping and taxes.
          $ref: '#/components/schemas/MonetaryAmount'
        merchant:
          description: Merchant from whom the goods or services the purchase was made
          $ref: '#/components/schemas/Merchant'
        diet:
          description: Individual diet. Used to better estimate  food-related purchases.
          $ref: '#/components/schemas/Diet'
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          description: Selects to which precision to truncate the quantities assigned to each bundle.
          example: 't'
          $ref: '#/components/schemas/MassUnit'
    IndividualEstimateRequest:
      description: |
        Parameters for estimating an individual's emissions

        All relevant values are yearly values.
      type: object
      required:
        - country_code
        - car_use
        - short_flights
        - medium_flights
        - long_flights
        - days_per_week_using_public_transport
        - diet
        - monthly_grocery_expenses
        - monthly_restaurant_expenses
        - monthly_clothing_expenses
        - monthly_furniture_appliances_expenses
        - electricity_consumption
        - green_electricity_used
        - gas_consumption
      properties:
        country_code:
          type: string
          description: The three-letter country code of the country where the company is located.
          example:  GBR
        car_use:
          type: boolean
          description: Does the individual use a car?
          example: false
        car_fuel_type:
          type: string
          description: How is the car powered?
          default: gasoline
          example:  gasoline
          enum:
            - gasoline
            - electric
            - hybrid
        average_car_distance_travelled:
          $ref: '#/components/schemas/Distance'
          description: Average yearly distance travelled per car
          example:
            amount: '6600'
            unit: 'km'
          default:
            amount: '8000'
            unit: 'km'
        short_flights:
          type: integer
          description: Number of short (under 3 hours) flights per year
          minimum: 0
          example: 6
        medium_flights:
          type: integer
          description: Number of medium (between 3 and 6 hours) flights per year
          minimum: 0
          example: 4
        long_flights:
          type: integer
          description: Number of long (over 6 hours) flights per year
          minimum: 0
          example: 1
        days_per_week_using_public_transport:
          type: integer
          description: Number of days per week commuting by public transport
          minimum: 0
          example: 2
        diet:
          $ref: '#/components/schemas/Diet'
          example: medium_meat_eater
        monthly_grocery_expenses:
          $ref: '#/components/schemas/MonetaryAmount'
          description: Food, supermarket, farmers market, fishmongers etc... expenses
          example:
            amount: '1500'
            currency: 'EUR'
        monthly_restaurant_expenses:
          $ref: '#/components/schemas/MonetaryAmount'
          description: Dining and take out expenses
          example:
            amount: '300'
            currency: 'EUR'
        monthly_clothing_expenses:
          $ref: '#/components/schemas/MonetaryAmount'
          description: Clothing expenses
          example:
            amount: '400'
            currency: 'EUR'
        monthly_furniture_appliances_expenses:
          $ref: '#/components/schemas/MonetaryAmount'
          description: Furniture and appliances expenses
          example:
            amount: '300'
            currency: 'EUR'
        monthly_other_expenses:
          $ref: '#/components/schemas/MonetaryAmount'
          description: Other such as phone, laptops, any other "item" you can think of.
          example:
            amount: '200'
            currency: 'EUR'
        electricity_consumption:
          type: integer
          description: Annual electricity consumption in kWh
          minimum: 0
          example: 11000
        green_electricity_used:
          type: boolean
          description: Is the electricity provided by renewable source(s)?
          example: true
        gas_consumption:
          type: integer
          description: Annual natural gas consumption in cubic meters
          minimum: 0
          example: 200
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          description: Selects to which precision to truncate the quantities assigned to each bundle.
          example: 't'
          $ref: '#/components/schemas/MassUnit'
    CompanyEstimateRequest:
      description: |
        Parameters for estimating emissions associated with operating a company.

        All relevant values are yearly values.
      type: object
      required:
        - employees
        - remote_employees_percentage
        - office_area
        - country_code
        - electricity_consumption
        - green_electricity_used
        - gas_consumption
        - company_cars
        - average_car_distance_travelled
        - employees_using_public_transport
        - short_flights
        - medium_flights
        - long_flights
        - first_or_business_class_percentage
        - food_and_drinks_expenses
        - vegetarian_and_vegan_percentage
        - electronic_device_expenses
        - garbage
        - recycled_garbage_percentage
      properties:
        employees:
          type: integer
          description: Number of employees
          minimum: 0
        remote_employees_percentage:
          description: Share of employees working remotely (in percent)
          $ref: '#/components/schemas/IntegerPercentage'
        office_area:
          $ref: '#/components/schemas/Area'
          description: Office area in square meters
        country_code:
          type: string
          description: The three-letter country code of the country where the company is located.
          example:  GBR
        postcode:
          type: string
          example: "99 210"
          description: The company's postal code
        city:
          type: string
          example: "Ledville"
        electricity_consumption:
          type: integer
          description: Electricity consumption in kWh
          minimum: 0
        green_electricity_used:
          type: boolean
          description: Is the electricity provided by renewable source(s)?
        gas_consumption:
          type: integer
          description: Yearly natural gas consumption in cubic meters
          minimum: 0
        company_cars:
          type: integer
          description: Company cars
          minimum: 0
        average_car_distance_travelled:
          $ref: '#/components/schemas/Distance'
          description: Average yearly distance travelled per car
        employees_using_public_transport:
          type: integer
          description: Number of employees commuting by public transport
          minimum: 0
        short_flights:
          type: integer
          description: Number of short (under 3 hours) flights per year
          minimum: 0
        medium_flights:
          type: integer
          description: Number of medium (between 3 and 6 hours) flights per year
          minimum: 0
        long_flights:
          type: integer
          description: Number of long (over 6 hours) flights per year
          minimum: 0
        first_or_business_class_percentage:
          description: Share of business or first class flights, in percent
          $ref: '#/components/schemas/IntegerPercentage'
        food_and_drinks_expenses:
          $ref: '#/components/schemas/MonetaryAmount'
          description: Amount spend on food and drinks
        vegetarian_and_vegan_percentage:
          description: Share of vegetarians or vegans in the company, in percent
          $ref: '#/components/schemas/IntegerPercentage'
        electronic_device_expenses:
          $ref: '#/components/schemas/MonetaryAmount'
          description: New electronic devices (laptops, monitors, etc.) expenses
        garbage:
          type: integer
          description: The amount of garbage produced, in kilograms
          minimum: 0
        recycled_garbage_percentage:
          description: Share of recycled garbage, in percent
          $ref: '#/components/schemas/IntegerPercentage'
        tech:
          type: object
          properties:
            on_premise:
              $ref: '#/components/schemas/CompanyOnPremiseUse'
            cloud:
              $ref: '#/components/schemas/CompanyCloudUse'
        bundle_selection:
          $ref: '#/components/schemas/BundleSelectionRequest'
        quantity_trunc:
          description: Selects to which precision to truncate the quantities assigned to each bundle.
          example: 't'
          $ref: '#/components/schemas/MassUnit'
    CompanyCloudUse:
      type: object
      description: Company's use of cloud services
      required:
        - cost
        - provider
      properties:
        cost:
          $ref: '#/components/schemas/MonetaryAmount'
        provider:
          $ref: '#/components/schemas/CloudProvider'
    CompanyOnPremiseUse:
      type: object
      description: Company's own tech infrastructure details
      required:
        - electricity_cost
      properties:
        electricity_cost:
          $ref: '#/components/schemas/MonetaryAmount'
    CloudProvider:
      type: string
      description: The identifier of a cloud provider.
      example: aws
      enum:
        - aws
        - gcp
        - azure
        - ovh
        - other
    IntegerPercentage:
      type: integer
      minimum: 0
      maximum: 100
    Merchant:
      type: object
      required:
        - category_code
        - country_code
      properties:
        category_code:
          type: string
          description: |
            An ISO 18245 Merchant Category Code (leading zeros need to be preserved) corresponding
            to the transaction.

            See https://github.com/greggles/mcc-codes for available codes.
          example: "0763"
        name:
          type: string
          description: The name of the merchant.
          example: The Corner Store
        country_code:
          type: string
          description: The three-letter code of the merchant's country.
          example:  GBR
    Diet:
      description: |
        A diet followed by an individual.

        High meat-eater is someone consuming over 100 grams of meat per day, medium is 50-99 grams per day
        and low is less than 50 grams per day. A fish eater is someone that doesn't consume meat other than
        fish.
      type: string
      enum:
        - high_meat_eater
        - medium_meat_eater
        - low_meat_eater
        - fish_eater
        - vegetarian
        - vegan
    EmissionEstimate:
      description: An emission estimate result. The value returned is in CO2e – it accounts for both CO2 and non-CO2 emissions.
      type: object
      required:
        - mass
      properties:
        mass:
          $ref: '#/components/schemas/Mass'
    EmissionEstimateResponse:
      description: An emission estimate result including a quote
      allOf:
        - $ref: '#/components/schemas/EmissionEstimate'
        - type: object
          required:
            - id
            - quote
          properties:
            id:
              type: string
              description: The emission calculation unique identifier
              example: '90ng23MKvLqbkpMwMw7yMBD4wJQrV6O6'
            quote:
              $ref: '#/components/schemas/OrderQuoteByQuantity'
    SingleShippingEmissionEstimate:
      allOf:
        - $ref: '#/components/schemas/ShippingLegEmissionEstimate'
        - type: object
          required:
            - id
            - quote
          properties:
            id:
              type: string
              description: The emission calculation unique identifier
              example: '90ng23MKvLqbkpMwMw7yMBD4wJQrV6O6'
            quote:
              $ref: '#/components/schemas/OrderQuoteByQuantity'
    ShippingLegEmissionEstimate:
      allOf:
        - $ref: '#/components/schemas/EmissionEstimate'
        - type: object
          required:
            - distance
          properties:
            distance:
              $ref: '#/components/schemas/Distance'
            methodology:
              type: array
              description: |
                Summary of the methodology used to calculate emissions or any value which is a prerequisite.

                `imo_unavailable_container_ship_fallback`: the vessel IMO was not found, therefore a generic container ship emission factor has been used.
              items:
                type: string
                enum:
                  - imo_unavailable_container_ship_fallback
    MultiLegShippingEmissionEstimate:
      description: |
        An emission estimate result for a transport involving multiple legs.

        Lune's API returns both the total emissions and per-leg emissions (in the `legs`
        property).

        The ordering of the legs in the estimate is the same as the ordering of the inputs.

        An error with estimating any of the legs will result in the whole estimation process
        failing completely (we don't provide partial estimates in light of a failure).
      allOf:
        - type: object
          required:
            - legs
          properties:
            legs:
              type: array
              items:
                $ref: '#/components/schemas/ShippingLegEmissionEstimate'
        - $ref: '#/components/schemas/SingleShippingEmissionEstimate'
    PaginatedOffsetLinks:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/OffsetLink'
    CompanyEmissionEstimate:
      allOf:
        - $ref: '#/components/schemas/EmissionEstimateResponse'
        - type: object
          required:
            - components
            - scope1
            - scope2
            - scope3
          properties:
            scope1:
              description: Scope 1 emissions. Direct emissions from owned or controlled sources.
              $ref: '#/components/schemas/Mass'
            scope2:
              description: Scope 2 emissions. Indirect emissions from the generation of purchased or acquired electricity, steam, heating, or cooling consumed.
              $ref: '#/components/schemas/Mass'
            scope3:
              description: Scope 3 emissions. All indirect emissions, not included in scope 2, that occur in the value chain.
              $ref: '#/components/schemas/Mass'
            components:
              type: object
              required:
                - material_and_waste
                - energy
                - travel_and_commute
                - food_and_drink
                - tech
              properties:
                material_and_waste:
                  description: Emissions associated with buying equipment and generating waste.
                  $ref: '#/components/schemas/Mass'
                energy:
                  description: Emissions associated with purchasing energy (electricy, heating etc.)
                  $ref: '#/components/schemas/Mass'
                travel_and_commute:
                  description: Emissions associated with business travels and commuting to/from work.
                  $ref: '#/components/schemas/Mass'
                food_and_drink:
                  description: Emissions associated with food and drinks.
                  $ref: '#/components/schemas/Mass'
                tech:
                  description: Emissions associated with operating computer systems.
                  $ref: '#/components/schemas/Mass'
    OffsetLink:
      type: object
      required:
        - id
        - name
        - url
        - created_at
        - status
        - use_logo
        - require_payment
      properties:
        id:
          type: string
          description: The offset link unique identifier
          example: 'UwjfkXjfksoHXzA1qjANL58GhjwqkxpB'
        name:
          type: string
          description: |
            Offset link name.

            This is a human readable name to recognise and distingish different offset links.
          example: 'Marketing Campaign July 2021'
        title:
          type: string
          description: |
            Offset link title

            This is the title that appears on the first screen of the offset links flow.
        description:
          type: string
          description: |
            Offset link description

            This is the description that appears on the first screen of the offset links flow.
        logo:
          type: string
          description: |
            Offset link logo URL

            This is the logo URL that appears on the first screen of the offset links flow.
        use_logo:
          type: boolean
          description: |
            Whether to include the Offset link logo (defined in Account settings) in the footer.
        url:
          type: string
          pattern: '^https?:\/\/.+$'
          description: The actual offset link URL that can be used to place orders
          example: 'https://links.lune.co/ds234cAd'
        value:
          $ref: '#/components/schemas/Money'
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        emails:
          type: array
          items:
            type: string
          description: The email addresses of users that are allowed to use the offset link.
          example:
            - john@doe.com
        bundles:
          type: array
          description: Bundle objects
          items:
            $ref: '#/components/schemas/Bundle'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        status:
          $ref: '#/components/schemas/OffsetLinkStatus'
        expires_at:
          $ref: '#/components/schemas/Timestamp'
        require_payment:
          type: boolean
          description: |
              If true, the user of the Offset Link is required to pay by credit/debit card.
    OffsetLinkAnalytics:
      type: object
      required:
        - id
        - unique_visitors
        - placed_orders
        - orders
      properties:
        id:
          type: string
          description: The offset link identifier
          example: 'UwjfkXjfksoHXzA1qjANL58GhjwqkxpB'
        unique_visitors:
          type: integer
          description: The number of unique visitors for the specific offset link
          example: 52344
        placed_orders:
          type: integer
          description: The number of placed orders for the specific offset link
          example: 52344
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OffsetLinkOrder'
    OffsetLinkOrder:
      type: object
      required:
        - order_id
        - created_at
        - email
        - bundles
      properties:
        order_id:
          type: string
          description: The order's unique identifier
          example: 'zwjfkXjfksoHXzA1qjANL58GhjwqkxpB'
        created_at:
          $ref: '#/components/schemas/Timestamp'
        email:
          type: string
          description: The email address of the user that placed an order through the offset link
          example:
            - john@doe.com
        bundles:
          type: array
          items:
            type: object
            required:
              - bundle_id
              - bundle_name
            properties:
              bundle_id:
                type: string
                description: The bundle's unique identifier
                example: va1BEV2VZqnzPkYxJgALg0GeQDoXlWO5
              bundle_name:
                type: string
                description: The bundle's name
                example: 'Latin America Forestry'
    OffsetLinkRequest:
      type: object
      required:
        - name
        - use_logo
      properties:
        name:
          type: string
          description: |
            Offset link name.

            This is a human readable name to recognise and distingish different offset links.
          example: 'Marketing Campaign July 2021'
        title:
          type: string
          description: |
            Offset link title

            This is the title that appears on the first screen of the offset links flow.
        description:
          type: string
          description: |
            Offset link description

            This is the description that appears on the first screen of the offset links flow.
        bundles:
          type: array
          items:
            type: string
          description: The bundle ids selected for use through the particular offset link.
          minItems: 1
          maxItems: 24
          uniqueItems: true
        value:
          $ref: '#/components/schemas/Money'
        emails:
          type: array
          items:
            type: string
          description: The email addresses of users that are allowed to use the offset link.
          example:
            - john@doe.com
        expires_at:
          $ref: '#/components/schemas/Timestamp'
        use_logo:
          type: boolean
          description: |
              Whether to include the Offset link logo (defined in Account settings) in the footer.
        require_payment:
          type: boolean
          description: |
              If true, the user of the Offset Link is required to pay by credit/debit card.
              This value cannot be updated once the offset link has been created.
    OffsetLinkUpdateRequest:
      type: object
      required:
        - name
        - use_logo
      properties:
        name:
          type: string
          description: |
            Offset link name.

            This is a human readable name to recognise and distingish different offset links.

          example: 'Marketing Campaign July 2021'
        title:
          type: string
          description: |
            Offset link title

            This is the title that appears on the first screen of the offset links flow.
        description:
          type: string
          description: |
            Offset link description

            This is the description that appears on the first screen of the offset links flow.
        bundles:
          type: array
          items:
            type: string
          description: The bundle ids selected for use through the particular offset link.
          minItems: 1
          maxItems: 24
          uniqueItems: true
        value:
          $ref: '#/components/schemas/Money'
        emails:
          type: array
          items:
            type: string
          description: The email addresses of users that are allowed to use the offset link.
          example:
            - john@doe.com
        expires_at:
          $ref: '#/components/schemas/Timestamp'
        use_logo:
          type: boolean
          description: |
              Whether to include the Offset link logo (defined in Account settings) in the footer.
    OffsetLinkStatus:
      type: string
      enum:
        - enabled
        - disabled
      example: 'enabled'
    Metadata:
      description: |
          An arbitrary dictionary (key-value pairs) to store application-specific information.

          Lune doesn't use this information for order processing. Its purpose is for the API
          clients to be able to attach arbitrary information (to an order for example) and
          then retrieve it.
      type: object
      additionalProperties:
        type: string
    Money:
      type: string
      pattern: '^[0-9]+(\.[0-9]+)?$'
      description: An amount of money (the fractional part is optional)
      example: '3.14'
    Timestamp:
      type: string
      format: date-time
      description: An <a href="https://pretty-rfc.herokuapp.com/RFC3339">RFC 3339</a>-formatted timestamp.
      example: '1985-04-12T23:20:50.52Z'
    Url:
      type: string
      pattern: '^https:\/\/[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&\/\/=]*)$'
      description: An HTTPS URL
    MonetaryAmount:
      type: object
      required:
        - value
        - currency
      properties:
        value:
          type: string
          pattern: ^[0-9]+(\.[0-9]+)?$
          description: An amount of money (the fractional part is optional)
          example: "3.14"
        currency:
          $ref: "#/components/schemas/CurrencyCode"
          example: GBP
    CurrencyCode:
      type: string
      description: |
        ISO 4217 3 character currency code.

        Note: Lune does not support all currency codes.
    CreateWebhookRequest:
      type: object
      required:
        - url
      properties:
        url:
          $ref: "#/components/schemas/Url"
    UpdateWebhookRequest:
      type: object
      properties:
        url:
          $ref: "#/components/schemas/Url"
        enabled:
          description: |
            Determines if events should be sent to the webhook or not. Defaults to `true` for newly created
            webhooks. When updating a webhook and the value is not explicitly specified the existing value
            will be used.
          type: boolean
    Webhook:
      type: object
      required:
        - id
        - url
        - enabled
        - secret
      properties:
        id:
          description: The webhook's unique identifier
          type: string
          example: 'ljmkOq7vXd239gAE9WALWQ8ZGVD5ExNz'
        url:
          $ref: "#/components/schemas/Url"
        enabled:
          description: Determines if events should be sent to the webhook or not.
          type: boolean
        secret:
          description: The secret key used to generate the webhook payload HMAC.
          type: string
    WebhookRequest:
      type: object
      required:
        - events
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEvent'
    WebhookEvent:
      type: object
      required:
        - api_version
        - event_id
        - event_type
        - data
      properties:
        api_version:
          type: string
          example: v1
          description: |
            Version of the API that serialized the event. The only possible value at the moment is `v1`.
        event_id:
          type: string
          example: va1BER4JZqnzPkYxJgALg0GeQDoXlWO5
          description: The event’s id. The id can be used for idempotency behaviour if stored on the client side.
        event_type:
          type: string
          enum:
            - order.received
            - order.placed
            - order.allocated
            - order.paid
            - order.cancelled
            - order.failed
            - order.completed
          description: The event type. The type of event data will depend on the value present here.
        sequence:
          type: string
          example: 2021-09-13 16:21:29.067803
          description: |
            The event’s sequence. This can be compared lexicographically to determine the order of events.

            The details of the format are subject to change without notice as long as the lexicographical
            ordering property remains intact. You can't depend on the values having any particular shape
            (in particular you can't depend on them being valid timestamps).
        data:
          $ref: '#/components/schemas/OrderEventDetails'
          description: Data of the event. On order.* events, this means an Order.
    OrderEventDetails:
      type: object
      required:
        - order
      properties:
        order:
          $ref: '#/components/schemas/Order'
    CreateClientAccountRequest:
      type: object
      required:
        - name
        - currency
        - type
      properties:
        name:
          description: The account name.
          type: string
        currency:
          description: The account currency.
          $ref: '#/components/schemas/CurrencyCode'
          example: 'GBP'
        type:
          $ref: '#/components/schemas/AccountType'
        beneficiary:
          description: The account beneficiary.
          type: string
    CreateAccountRequest:
      type: object
      required:
        - name
        - currency
      properties:
        name:
          description: The account name.
          type: string
        currency:
          description: The account currency.
          $ref: '#/components/schemas/CurrencyCode'
          example: 'GBP'
        beneficiary:
          description: The account beneficiary.
          type: string
          minLength: 1
    PaginatedAccounts:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              description: Paginated Account objects
              items:
                $ref: '#/components/schemas/Account'
    PaginatedClientAccounts:
      allOf:
        - $ref: '#/components/schemas/PaginatedBase'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              description: Paginated Client Account objects
              items:
                $ref: '#/components/schemas/ClientAccount'
    AccountPair:
      type: object
      required:
        - live
        - test
      properties:
        live:
          $ref: '#/components/schemas/Account'
        test:
          $ref: '#/components/schemas/Account'
    Account:
      description: Account used for your regular operations.
      allOf:
        - $ref: '#/components/schemas/AccountBase'
      type: object
      required:
        - scope
        - sibling_id
      properties:
        scope:
          type: string
          enum:
            - account
        sibling_id:
          type: string
          description: |
            Account id of the paired account.

            A live account points to its sibling test account and vice versa.
          example: 'gGdqQ0AyQJ72NauCCndfaQLNhc6Jfxc1'
    ClientAccount:
      description: Account used when you operate an account on behalf of a third party.
      allOf:
        - $ref: '#/components/schemas/AccountBase'
      type: object
      required:
        - scope
      properties:
        scope:
          type: string
          enum:
            - client_account
    AnyAccount:
      type: object
      oneOf:
        - $ref: '#/components/schemas/Account'
        - $ref: '#/components/schemas/ClientAccount'
      discriminator:
        propertyName: scope
        mapping:
          account: '#/components/schemas/Account'
          client_account: '#/components/schemas/ClientAccount'
    UpdateAccountRequest:
      description: |
        It's only possible to edit the name and beneficiary of an account.

        Not providing the `beneficiary` property will result in clearing the existing value (if present).
      type: object
      required:
        - name
      properties:
        name:
          description: The account name.
          type: string
        beneficiary:
          description: The account beneficiary.
          type: string
          minLength: 1
        bundle_mix_id:
          description: The bundle mix unique identifier.
          type: string
          example: 'jvqkOq7vX2K18HHydar0W23ZGJdc91Pa'
